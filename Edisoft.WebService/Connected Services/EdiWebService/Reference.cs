//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Edisoft.WebService.EdiWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:wsedi", ConfigurationName="EdiWebService.EDIWebServicePortType")]
    public interface EDIWebServicePortType {
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:getDocumentRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:getDocumentResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.getDocumentResponse getDocument(Edisoft.WebService.EdiWebService.getDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:getDocumentRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:getDocumentResponse")]
        System.IAsyncResult BegingetDocument(Edisoft.WebService.EdiWebService.getDocumentRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.getDocumentResponse EndgetDocument(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:sendRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:sendResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.sendResponse send(Edisoft.WebService.EdiWebService.sendRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:sendRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:sendResponse")]
        System.IAsyncResult Beginsend(Edisoft.WebService.EdiWebService.sendRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.sendResponse Endsend(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:receiveRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:receiveResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.receiveResponse receive(Edisoft.WebService.EdiWebService.receiveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:receiveRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:receiveResponse")]
        System.IAsyncResult Beginreceive(Edisoft.WebService.EdiWebService.receiveRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.receiveResponse Endreceive(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:receiveBinaryRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:receiveBinaryResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.receiveBinaryResponse receiveBinary(Edisoft.WebService.EdiWebService.receiveBinaryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:receiveBinaryRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:receiveBinaryResponse")]
        System.IAsyncResult BeginreceiveBinary(Edisoft.WebService.EdiWebService.receiveBinaryRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.receiveBinaryResponse EndreceiveBinary(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:execSQLtoDocRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:execSQLtoDocResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.execSQLtoDocResponse execSQLtoDoc(Edisoft.WebService.EdiWebService.execSQLtoDocRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:execSQLtoDocRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:execSQLtoDocResponse")]
        System.IAsyncResult BeginexecSQLtoDoc(Edisoft.WebService.EdiWebService.execSQLtoDocRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.execSQLtoDocResponse EndexecSQLtoDoc(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:needUpdateRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:needUpdateResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.needUpdateResponse needUpdate(Edisoft.WebService.EdiWebService.needUpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:needUpdateRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:needUpdateResponse")]
        System.IAsyncResult BeginneedUpdate(Edisoft.WebService.EdiWebService.needUpdateRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.needUpdateResponse EndneedUpdate(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:sendPDARequest", ReplyAction="urn:wsedi:EDIWebServicePortType:sendPDAResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.sendPDAResponse sendPDA(Edisoft.WebService.EdiWebService.sendPDARequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:sendPDARequest", ReplyAction="urn:wsedi:EDIWebServicePortType:sendPDAResponse")]
        System.IAsyncResult BeginsendPDA(Edisoft.WebService.EdiWebService.sendPDARequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.sendPDAResponse EndsendPDA(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:sendBinaryRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:sendBinaryResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.sendBinaryResponse sendBinary(Edisoft.WebService.EdiWebService.sendBinaryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:sendBinaryRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:sendBinaryResponse")]
        System.IAsyncResult BeginsendBinary(Edisoft.WebService.EdiWebService.sendBinaryRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.sendBinaryResponse EndsendBinary(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:changeDocumentStatusRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:changeDocumentStatusResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.changeDocumentStatusResponse changeDocumentStatus(Edisoft.WebService.EdiWebService.changeDocumentStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:changeDocumentStatusRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:changeDocumentStatusResponse")]
        System.IAsyncResult BeginchangeDocumentStatus(Edisoft.WebService.EdiWebService.changeDocumentStatusRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.changeDocumentStatusResponse EndchangeDocumentStatus(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:receivePDARequest", ReplyAction="urn:wsedi:EDIWebServicePortType:receivePDAResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.receivePDAResponse receivePDA(Edisoft.WebService.EdiWebService.receivePDARequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:receivePDARequest", ReplyAction="urn:wsedi:EDIWebServicePortType:receivePDAResponse")]
        System.IAsyncResult BeginreceivePDA(Edisoft.WebService.EdiWebService.receivePDARequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.receivePDAResponse EndreceivePDA(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:listPBRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listPBResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.listPBResponse listPB(Edisoft.WebService.EdiWebService.listPBRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:listPBRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listPBResponse")]
        System.IAsyncResult BeginlistPB(Edisoft.WebService.EdiWebService.listPBRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.listPBResponse EndlistPB(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:importDocumentRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:importDocumentResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.importDocumentResponse importDocument(Edisoft.WebService.EdiWebService.importDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:importDocumentRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:importDocumentResponse")]
        System.IAsyncResult BeginimportDocument(Edisoft.WebService.EdiWebService.importDocumentRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.importDocumentResponse EndimportDocument(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:listPBExRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listPBExResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.listPBExResponse listPBEx(Edisoft.WebService.EdiWebService.listPBExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:listPBExRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listPBExResponse")]
        System.IAsyncResult BeginlistPBEx(Edisoft.WebService.EdiWebService.listPBExRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.listPBExResponse EndlistPBEx(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:listPBExAllRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listPBExAllResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.listPBExAllResponse listPBExAll(Edisoft.WebService.EdiWebService.listPBExAllRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:listPBExAllRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listPBExAllResponse")]
        System.IAsyncResult BeginlistPBExAll(Edisoft.WebService.EdiWebService.listPBExAllRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.listPBExAllResponse EndlistPBExAll(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:listMBRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listMBResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.listMBResponse listMB(Edisoft.WebService.EdiWebService.listMBRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:listMBRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listMBResponse")]
        System.IAsyncResult BeginlistMB(Edisoft.WebService.EdiWebService.listMBRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.listMBResponse EndlistMB(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:listMBAllRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listMBAllResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.listMBAllResponse listMBAll(Edisoft.WebService.EdiWebService.listMBAllRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:listMBAllRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listMBAllResponse")]
        System.IAsyncResult BeginlistMBAll(Edisoft.WebService.EdiWebService.listMBAllRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.listMBAllResponse EndlistMBAll(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:listMBAllExRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listMBAllExResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.listMBAllExResponse listMBAllEx(Edisoft.WebService.EdiWebService.listMBAllExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:listMBAllExRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listMBAllExResponse")]
        System.IAsyncResult BeginlistMBAllEx(Edisoft.WebService.EdiWebService.listMBAllExRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.listMBAllExResponse EndlistMBAllEx(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:listMBAllExXMLRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listMBAllExXMLResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.listMBAllExXMLResponse listMBAllExXML(Edisoft.WebService.EdiWebService.listMBAllExXMLRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:listMBAllExXMLRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listMBAllExXMLResponse")]
        System.IAsyncResult BeginlistMBAllExXML(Edisoft.WebService.EdiWebService.listMBAllExXMLRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.listMBAllExXMLResponse EndlistMBAllExXML(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:listMBExRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listMBExResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.listMBExResponse listMBEx(Edisoft.WebService.EdiWebService.listMBExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:listMBExRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listMBExResponse")]
        System.IAsyncResult BeginlistMBEx(Edisoft.WebService.EdiWebService.listMBExRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.listMBExResponse EndlistMBEx(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:listMBLastRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listMBLastResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.listMBLastResponse listMBLast(Edisoft.WebService.EdiWebService.listMBLastRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:listMBLastRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listMBLastResponse")]
        System.IAsyncResult BeginlistMBLast(Edisoft.WebService.EdiWebService.listMBLastRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.listMBLastResponse EndlistMBLast(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:listMBRefRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listMBRefResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.listMBRefResponse listMBRef(Edisoft.WebService.EdiWebService.listMBRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:listMBRefRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listMBRefResponse")]
        System.IAsyncResult BeginlistMBRef(Edisoft.WebService.EdiWebService.listMBRefRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.listMBRefResponse EndlistMBRef(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:relationshipsXMLRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:relationshipsXMLResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.relationshipsXMLResponse relationshipsXML(Edisoft.WebService.EdiWebService.relationshipsXMLRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:relationshipsXMLRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:relationshipsXMLResponse")]
        System.IAsyncResult BeginrelationshipsXML(Edisoft.WebService.EdiWebService.relationshipsXMLRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.relationshipsXMLResponse EndrelationshipsXML(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:execSQLRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:execSQLResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.execSQLResponse execSQL(Edisoft.WebService.EdiWebService.execSQLRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:execSQLRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:execSQLResponse")]
        System.IAsyncResult BeginexecSQL(Edisoft.WebService.EdiWebService.execSQLRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.execSQLResponse EndexecSQL(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:generateDocumentRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:generateDocumentResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.generateDocumentResponse generateDocument(Edisoft.WebService.EdiWebService.generateDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:generateDocumentRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:generateDocumentResponse")]
        System.IAsyncResult BegingenerateDocument(Edisoft.WebService.EdiWebService.generateDocumentRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.generateDocumentResponse EndgenerateDocument(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:localizationInfoXMLRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:localizationInfoXMLResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.localizationInfoXMLResponse localizationInfoXML(Edisoft.WebService.EdiWebService.localizationInfoXMLRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:localizationInfoXMLRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:localizationInfoXMLResponse")]
        System.IAsyncResult BeginlocalizationInfoXML(Edisoft.WebService.EdiWebService.localizationInfoXMLRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.localizationInfoXMLResponse EndlocalizationInfoXML(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:checkPacketStatusRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:checkPacketStatusResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.checkPacketStatusResponse checkPacketStatus(Edisoft.WebService.EdiWebService.checkPacketStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:checkPacketStatusRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:checkPacketStatusResponse")]
        System.IAsyncResult BegincheckPacketStatus(Edisoft.WebService.EdiWebService.checkPacketStatusRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.checkPacketStatusResponse EndcheckPacketStatus(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:listForIntegrationRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listForIntegrationResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.listForIntegrationResponse listForIntegration(Edisoft.WebService.EdiWebService.listForIntegrationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:listForIntegrationRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listForIntegrationResponse")]
        System.IAsyncResult BeginlistForIntegration(Edisoft.WebService.EdiWebService.listForIntegrationRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.listForIntegrationResponse EndlistForIntegration(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:listBinaryforIntegrationFNSRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listBinaryforIntegrationFNSResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.listBinaryforIntegrationFNSResponse listBinaryforIntegrationFNS(Edisoft.WebService.EdiWebService.listBinaryforIntegrationFNSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:listBinaryforIntegrationFNSRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listBinaryforIntegrationFNSResponse")]
        System.IAsyncResult BeginlistBinaryforIntegrationFNS(Edisoft.WebService.EdiWebService.listBinaryforIntegrationFNSRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.listBinaryforIntegrationFNSResponse EndlistBinaryforIntegrationFNS(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:receiveDocForIntegrationRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:receiveDocForIntegrationResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.receiveDocForIntegrationResponse receiveDocForIntegration(Edisoft.WebService.EdiWebService.receiveDocForIntegrationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:receiveDocForIntegrationRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:receiveDocForIntegrationResponse")]
        System.IAsyncResult BeginreceiveDocForIntegration(Edisoft.WebService.EdiWebService.receiveDocForIntegrationRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.receiveDocForIntegrationResponse EndreceiveDocForIntegration(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:setIntegrationStateRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:setIntegrationStateResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.setIntegrationStateResponse setIntegrationState(Edisoft.WebService.EdiWebService.setIntegrationStateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:setIntegrationStateRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:setIntegrationStateResponse")]
        System.IAsyncResult BeginsetIntegrationState(Edisoft.WebService.EdiWebService.setIntegrationStateRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.setIntegrationStateResponse EndsetIntegrationState(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:receiveBinaryforIntegrationRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:receiveBinaryforIntegrationResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.receiveBinaryforIntegrationResponse receiveBinaryforIntegration(Edisoft.WebService.EdiWebService.receiveBinaryforIntegrationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:receiveBinaryforIntegrationRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:receiveBinaryforIntegrationResponse")]
        System.IAsyncResult BeginreceiveBinaryforIntegration(Edisoft.WebService.EdiWebService.receiveBinaryforIntegrationRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.receiveBinaryforIntegrationResponse EndreceiveBinaryforIntegration(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:listForIntegrationErrorsRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listForIntegrationErrorsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.listForIntegrationErrorsResponse listForIntegrationErrors(Edisoft.WebService.EdiWebService.listForIntegrationErrorsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:listForIntegrationErrorsRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listForIntegrationErrorsResponse")]
        System.IAsyncResult BeginlistForIntegrationErrors(Edisoft.WebService.EdiWebService.listForIntegrationErrorsRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.listForIntegrationErrorsResponse EndlistForIntegrationErrors(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:listForIntegrationIgnoredRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listForIntegrationIgnoredResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.listForIntegrationIgnoredResponse listForIntegrationIgnored(Edisoft.WebService.EdiWebService.listForIntegrationIgnoredRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:listForIntegrationIgnoredRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listForIntegrationIgnoredResponse")]
        System.IAsyncResult BeginlistForIntegrationIgnored(Edisoft.WebService.EdiWebService.listForIntegrationIgnoredRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.listForIntegrationIgnoredResponse EndlistForIntegrationIgnored(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:getIntegrationStateRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:getIntegrationStateResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.getIntegrationStateResponse getIntegrationState(Edisoft.WebService.EdiWebService.getIntegrationStateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:getIntegrationStateRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:getIntegrationStateResponse")]
        System.IAsyncResult BegingetIntegrationState(Edisoft.WebService.EdiWebService.getIntegrationStateRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.getIntegrationStateResponse EndgetIntegrationState(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:reprocessIntegrationDocsRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:reprocessIntegrationDocsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.reprocessIntegrationDocsResponse reprocessIntegrationDocs(Edisoft.WebService.EdiWebService.reprocessIntegrationDocsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:reprocessIntegrationDocsRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:reprocessIntegrationDocsResponse")]
        System.IAsyncResult BeginreprocessIntegrationDocs(Edisoft.WebService.EdiWebService.reprocessIntegrationDocsRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.reprocessIntegrationDocsResponse EndreprocessIntegrationDocs(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:listForIntegrationErrorsPatternRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listForIntegrationErrorsPatternResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.listForIntegrationErrorsPatternResponse listForIntegrationErrorsPattern(Edisoft.WebService.EdiWebService.listForIntegrationErrorsPatternRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:listForIntegrationErrorsPatternRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:listForIntegrationErrorsPatternResponse")]
        System.IAsyncResult BeginlistForIntegrationErrorsPattern(Edisoft.WebService.EdiWebService.listForIntegrationErrorsPatternRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.listForIntegrationErrorsPatternResponse EndlistForIntegrationErrorsPattern(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:receivePrintFormRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:receivePrintFormResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.receivePrintFormResponse receivePrintForm(Edisoft.WebService.EdiWebService.receivePrintFormRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:receivePrintFormRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:receivePrintFormResponse")]
        System.IAsyncResult BeginreceivePrintForm(Edisoft.WebService.EdiWebService.receivePrintFormRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.receivePrintFormResponse EndreceivePrintForm(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:organizationInfoRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:organizationInfoResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.organizationInfoResponse organizationInfo(Edisoft.WebService.EdiWebService.organizationInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:organizationInfoRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:organizationInfoResponse")]
        System.IAsyncResult BeginorganizationInfo(Edisoft.WebService.EdiWebService.organizationInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.organizationInfoResponse EndorganizationInfo(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:organizationInfoXMLRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:organizationInfoXMLResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.organizationInfoXMLResponse organizationInfoXML(Edisoft.WebService.EdiWebService.organizationInfoXMLRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:organizationInfoXMLRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:organizationInfoXMLResponse")]
        System.IAsyncResult BeginorganizationInfoXML(Edisoft.WebService.EdiWebService.organizationInfoXMLRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.organizationInfoXMLResponse EndorganizationInfoXML(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:receiveFnsArchiveRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:receiveFnsArchiveResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.receiveFnsArchiveResponse receiveFnsArchive(Edisoft.WebService.EdiWebService.receiveFnsArchiveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:receiveFnsArchiveRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:receiveFnsArchiveResponse")]
        System.IAsyncResult BeginreceiveFnsArchive(Edisoft.WebService.EdiWebService.receiveFnsArchiveRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.receiveFnsArchiveResponse EndreceiveFnsArchive(System.IAsyncResult result);
        
        // CODEGEN: Параметр "return" требует дополнительной информации о схеме, которую невозможно получить в режиме параметров. Указан атрибут "System.Xml.Serialization.XmlElementAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsedi:EDIWebServicePortType:relationshipsRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:relationshipsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(resultAbstract))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Edisoft.WebService.EdiWebService.relationshipsResponse relationships(Edisoft.WebService.EdiWebService.relationshipsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:wsedi:EDIWebServicePortType:relationshipsRequest", ReplyAction="urn:wsedi:EDIWebServicePortType:relationshipsResponse")]
        System.IAsyncResult Beginrelationships(Edisoft.WebService.EdiWebService.relationshipsRequest request, System.AsyncCallback callback, object asyncState);
        
        Edisoft.WebService.EdiWebService.relationshipsResponse Endrelationships(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:wsedi")]
    public partial class retRes : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string cntField;
        
        private string resField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string cnt {
            get {
                return this.cntField;
            }
            set {
                this.cntField = value;
                this.RaisePropertyChanged("cnt");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string res {
            get {
                return this.resField;
            }
            set {
                this.resField = value;
                this.RaisePropertyChanged("res");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:wsedi")]
    public partial class organizationInfoSoap : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string addressField;
        
        private string boxIdField;
        
        private string cityField;
        
        private string fnsIdField;
        
        private string glnField;
        
        private string innField;
        
        private string kppField;
        
        private string nameFullField;
        
        private string nameShortField;
        
        private string ogrnField;
        
        private string regionField;
        
        private string stateCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
                this.RaisePropertyChanged("address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string boxId {
            get {
                return this.boxIdField;
            }
            set {
                this.boxIdField = value;
                this.RaisePropertyChanged("boxId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
                this.RaisePropertyChanged("city");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string fnsId {
            get {
                return this.fnsIdField;
            }
            set {
                this.fnsIdField = value;
                this.RaisePropertyChanged("fnsId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public string gln {
            get {
                return this.glnField;
            }
            set {
                this.glnField = value;
                this.RaisePropertyChanged("gln");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public string inn {
            get {
                return this.innField;
            }
            set {
                this.innField = value;
                this.RaisePropertyChanged("inn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public string kpp {
            get {
                return this.kppField;
            }
            set {
                this.kppField = value;
                this.RaisePropertyChanged("kpp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7)]
        public string nameFull {
            get {
                return this.nameFullField;
            }
            set {
                this.nameFullField = value;
                this.RaisePropertyChanged("nameFull");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8)]
        public string nameShort {
            get {
                return this.nameShortField;
            }
            set {
                this.nameShortField = value;
                this.RaisePropertyChanged("nameShort");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9)]
        public string ogrn {
            get {
                return this.ogrnField;
            }
            set {
                this.ogrnField = value;
                this.RaisePropertyChanged("ogrn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10)]
        public string region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
                this.RaisePropertyChanged("region");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11)]
        public string stateCode {
            get {
                return this.stateCodeField;
            }
            set {
                this.stateCodeField = value;
                this.RaisePropertyChanged("stateCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:wsedi")]
    public partial class contentOrganizationInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private organizationInfoSoap organizationinfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("organization-info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public organizationInfoSoap organizationinfo {
            get {
                return this.organizationinfoField;
            }
            set {
                this.organizationinfoField = value;
                this.RaisePropertyChanged("organizationinfo");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:wsedi")]
    public partial class documentInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string buyerilnField;
        
        private string certdatenotafterField;
        
        private string certdatenotbeforeField;
        
        private string certinitialssignatoryField;
        
        private string certissueradresField;
        
        private string certissuerinnField;
        
        private string certissuerogrnField;
        
        private string certissuerorganizationField;
        
        private string certpositionField;
        
        private string certserialnumberField;
        
        private string certthumbprintField;
        
        private string commentField;
        
        private string commenteventField;
        
        private string createdatetimeField;
        
        private string delstreetandnumberField;
        
        private string deliverycodebysenderField;
        
        private string deliveryilnField;
        
        private string deliverynameField;
        
        private string documentcontrolnumberField;
        
        private string documentdateField;
        
        private string documentidField;
        
        private string documentnumberField;
        
        private string documentstandardField;
        
        private string documentstatusField;
        
        private string documenttestField;
        
        private string documenttypeField;
        
        private string documenttypefnsField;
        
        private string documentversionField;
        
        private string errortextField;
        
        private string eventtypeField;
        
        private string filecontentField;
        
        private string filenameField;
        
        private string filenameorigField;
        
        private string fnsstatusField;
        
        private string issignaturerequiredField;
        
        private string parentdocumentidField;
        
        private string partnerilnField;
        
        private string receivedateField;
        
        private string receiverboxidField;
        
        private string referencenumberField;
        
        private string senderboxidField;
        
        private string issignField;
        
        private long trackingidField;
        
        private bool trackingidFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("buyer-iln", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string buyeriln {
            get {
                return this.buyerilnField;
            }
            set {
                this.buyerilnField = value;
                this.RaisePropertyChanged("buyeriln");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cert-date-not-after", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string certdatenotafter {
            get {
                return this.certdatenotafterField;
            }
            set {
                this.certdatenotafterField = value;
                this.RaisePropertyChanged("certdatenotafter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cert-date-not-before", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string certdatenotbefore {
            get {
                return this.certdatenotbeforeField;
            }
            set {
                this.certdatenotbeforeField = value;
                this.RaisePropertyChanged("certdatenotbefore");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cert-initials-signatory", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string certinitialssignatory {
            get {
                return this.certinitialssignatoryField;
            }
            set {
                this.certinitialssignatoryField = value;
                this.RaisePropertyChanged("certinitialssignatory");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cert-issuer-adres", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public string certissueradres {
            get {
                return this.certissueradresField;
            }
            set {
                this.certissueradresField = value;
                this.RaisePropertyChanged("certissueradres");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cert-issuer-inn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public string certissuerinn {
            get {
                return this.certissuerinnField;
            }
            set {
                this.certissuerinnField = value;
                this.RaisePropertyChanged("certissuerinn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cert-issuer-ogrn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public string certissuerogrn {
            get {
                return this.certissuerogrnField;
            }
            set {
                this.certissuerogrnField = value;
                this.RaisePropertyChanged("certissuerogrn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cert-issuer-organization", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7)]
        public string certissuerorganization {
            get {
                return this.certissuerorganizationField;
            }
            set {
                this.certissuerorganizationField = value;
                this.RaisePropertyChanged("certissuerorganization");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cert-position", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8)]
        public string certposition {
            get {
                return this.certpositionField;
            }
            set {
                this.certpositionField = value;
                this.RaisePropertyChanged("certposition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cert-serial-number", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer", Order=9)]
        public string certserialnumber {
            get {
                return this.certserialnumberField;
            }
            set {
                this.certserialnumberField = value;
                this.RaisePropertyChanged("certserialnumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cert-thumbprint", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10)]
        public string certthumbprint {
            get {
                return this.certthumbprintField;
            }
            set {
                this.certthumbprintField = value;
                this.RaisePropertyChanged("certthumbprint");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
                this.RaisePropertyChanged("comment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("comment-event", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=12)]
        public string commentevent {
            get {
                return this.commenteventField;
            }
            set {
                this.commenteventField = value;
                this.RaisePropertyChanged("commentevent");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("create-date-time", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=13)]
        public string createdatetime {
            get {
                return this.createdatetimeField;
            }
            set {
                this.createdatetimeField = value;
                this.RaisePropertyChanged("createdatetime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("del-street-and-number", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=14)]
        public string delstreetandnumber {
            get {
                return this.delstreetandnumberField;
            }
            set {
                this.delstreetandnumberField = value;
                this.RaisePropertyChanged("delstreetandnumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("delivery-code-by-sender", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=15)]
        public string deliverycodebysender {
            get {
                return this.deliverycodebysenderField;
            }
            set {
                this.deliverycodebysenderField = value;
                this.RaisePropertyChanged("deliverycodebysender");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("delivery-iln", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=16)]
        public string deliveryiln {
            get {
                return this.deliveryilnField;
            }
            set {
                this.deliveryilnField = value;
                this.RaisePropertyChanged("deliveryiln");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("delivery-name", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=17)]
        public string deliveryname {
            get {
                return this.deliverynameField;
            }
            set {
                this.deliverynameField = value;
                this.RaisePropertyChanged("deliveryname");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("document-control-number", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=18)]
        public string documentcontrolnumber {
            get {
                return this.documentcontrolnumberField;
            }
            set {
                this.documentcontrolnumberField = value;
                this.RaisePropertyChanged("documentcontrolnumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("document-date", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=19)]
        public string documentdate {
            get {
                return this.documentdateField;
            }
            set {
                this.documentdateField = value;
                this.RaisePropertyChanged("documentdate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("document-id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=20)]
        public string documentid {
            get {
                return this.documentidField;
            }
            set {
                this.documentidField = value;
                this.RaisePropertyChanged("documentid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("document-number", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=21)]
        public string documentnumber {
            get {
                return this.documentnumberField;
            }
            set {
                this.documentnumberField = value;
                this.RaisePropertyChanged("documentnumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("document-standard", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=22)]
        public string documentstandard {
            get {
                return this.documentstandardField;
            }
            set {
                this.documentstandardField = value;
                this.RaisePropertyChanged("documentstandard");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("document-status", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=23)]
        public string documentstatus {
            get {
                return this.documentstatusField;
            }
            set {
                this.documentstatusField = value;
                this.RaisePropertyChanged("documentstatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("document-test", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=24)]
        public string documenttest {
            get {
                return this.documenttestField;
            }
            set {
                this.documenttestField = value;
                this.RaisePropertyChanged("documenttest");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("document-type", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=25)]
        public string documenttype {
            get {
                return this.documenttypeField;
            }
            set {
                this.documenttypeField = value;
                this.RaisePropertyChanged("documenttype");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("document-type-fns", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=26)]
        public string documenttypefns {
            get {
                return this.documenttypefnsField;
            }
            set {
                this.documenttypefnsField = value;
                this.RaisePropertyChanged("documenttypefns");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("document-version", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=27)]
        public string documentversion {
            get {
                return this.documentversionField;
            }
            set {
                this.documentversionField = value;
                this.RaisePropertyChanged("documentversion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("error-text", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=28)]
        public string errortext {
            get {
                return this.errortextField;
            }
            set {
                this.errortextField = value;
                this.RaisePropertyChanged("errortext");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("event-type", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=29)]
        public string eventtype {
            get {
                return this.eventtypeField;
            }
            set {
                this.eventtypeField = value;
                this.RaisePropertyChanged("eventtype");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("file-content", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=30)]
        public string filecontent {
            get {
                return this.filecontentField;
            }
            set {
                this.filecontentField = value;
                this.RaisePropertyChanged("filecontent");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("file-name", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=31)]
        public string filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
                this.RaisePropertyChanged("filename");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("filename-orig", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=32)]
        public string filenameorig {
            get {
                return this.filenameorigField;
            }
            set {
                this.filenameorigField = value;
                this.RaisePropertyChanged("filenameorig");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fns-status", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=33)]
        public string fnsstatus {
            get {
                return this.fnsstatusField;
            }
            set {
                this.fnsstatusField = value;
                this.RaisePropertyChanged("fnsstatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("is-signature-required", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=34)]
        public string issignaturerequired {
            get {
                return this.issignaturerequiredField;
            }
            set {
                this.issignaturerequiredField = value;
                this.RaisePropertyChanged("issignaturerequired");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parent-document-id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=35)]
        public string parentdocumentid {
            get {
                return this.parentdocumentidField;
            }
            set {
                this.parentdocumentidField = value;
                this.RaisePropertyChanged("parentdocumentid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("partner-iln", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=36)]
        public string partneriln {
            get {
                return this.partnerilnField;
            }
            set {
                this.partnerilnField = value;
                this.RaisePropertyChanged("partneriln");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("receive-date", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=37)]
        public string receivedate {
            get {
                return this.receivedateField;
            }
            set {
                this.receivedateField = value;
                this.RaisePropertyChanged("receivedate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("receiver-box-id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=38)]
        public string receiverboxid {
            get {
                return this.receiverboxidField;
            }
            set {
                this.receiverboxidField = value;
                this.RaisePropertyChanged("receiverboxid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("reference-number", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=39)]
        public string referencenumber {
            get {
                return this.referencenumberField;
            }
            set {
                this.referencenumberField = value;
                this.RaisePropertyChanged("referencenumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sender-box-id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=40)]
        public string senderboxid {
            get {
                return this.senderboxidField;
            }
            set {
                this.senderboxidField = value;
                this.RaisePropertyChanged("senderboxid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("is-sign", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=41)]
        public string issign {
            get {
                return this.issignField;
            }
            set {
                this.issignField = value;
                this.RaisePropertyChanged("issign");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("tracking-id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=42)]
        public long trackingid {
            get {
                return this.trackingidField;
            }
            set {
                this.trackingidField = value;
                this.RaisePropertyChanged("trackingid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool trackingidSpecified {
            get {
                return this.trackingidFieldSpecified;
            }
            set {
                this.trackingidFieldSpecified = value;
                this.RaisePropertyChanged("trackingidSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:wsedi")]
    public partial class relation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string descriptionField;
        
        private string directionField;
        
        private string documentstandardField;
        
        private string documenttypeField;
        
        private string formField;
        
        private string partnerilnField;
        
        private string partnernameField;
        
        private long relationidField;
        
        private bool relationidFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
                this.RaisePropertyChanged("direction");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("document-standard", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string documentstandard {
            get {
                return this.documentstandardField;
            }
            set {
                this.documentstandardField = value;
                this.RaisePropertyChanged("documentstandard");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("document-type", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string documenttype {
            get {
                return this.documenttypeField;
            }
            set {
                this.documenttypeField = value;
                this.RaisePropertyChanged("documenttype");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public string form {
            get {
                return this.formField;
            }
            set {
                this.formField = value;
                this.RaisePropertyChanged("form");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("partner-iln", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public string partneriln {
            get {
                return this.partnerilnField;
            }
            set {
                this.partnerilnField = value;
                this.RaisePropertyChanged("partneriln");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("partner-name", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public string partnername {
            get {
                return this.partnernameField;
            }
            set {
                this.partnernameField = value;
                this.RaisePropertyChanged("partnername");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("relation-id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7)]
        public long relationid {
            get {
                return this.relationidField;
            }
            set {
                this.relationidField = value;
                this.RaisePropertyChanged("relationid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool relationidSpecified {
            get {
                return this.relationidFieldSpecified;
            }
            set {
                this.relationidFieldSpecified = value;
                this.RaisePropertyChanged("relationidSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:wsedi")]
    public partial class localizationInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string cityNameField;
        
        private string codeByReceiverField;
        
        private string codeBySenderField;
        
        private string countryField;
        
        private string emailField;
        
        private string headquartersIlnField;
        
        private string headquartersInnField;
        
        private string headquartersNameField;
        
        private string ilnField;
        
        private string innField;
        
        private string kppField;
        
        private string nameField;
        
        private string phoneNumberField;
        
        private string postalCodeField;
        
        private string stateCodeField;
        
        private string streetAndNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string cityName {
            get {
                return this.cityNameField;
            }
            set {
                this.cityNameField = value;
                this.RaisePropertyChanged("cityName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string codeByReceiver {
            get {
                return this.codeByReceiverField;
            }
            set {
                this.codeByReceiverField = value;
                this.RaisePropertyChanged("codeByReceiver");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string codeBySender {
            get {
                return this.codeBySenderField;
            }
            set {
                this.codeBySenderField = value;
                this.RaisePropertyChanged("codeBySender");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
                this.RaisePropertyChanged("country");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public string headquartersIln {
            get {
                return this.headquartersIlnField;
            }
            set {
                this.headquartersIlnField = value;
                this.RaisePropertyChanged("headquartersIln");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public string headquartersInn {
            get {
                return this.headquartersInnField;
            }
            set {
                this.headquartersInnField = value;
                this.RaisePropertyChanged("headquartersInn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7)]
        public string headquartersName {
            get {
                return this.headquartersNameField;
            }
            set {
                this.headquartersNameField = value;
                this.RaisePropertyChanged("headquartersName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8)]
        public string iln {
            get {
                return this.ilnField;
            }
            set {
                this.ilnField = value;
                this.RaisePropertyChanged("iln");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9)]
        public string inn {
            get {
                return this.innField;
            }
            set {
                this.innField = value;
                this.RaisePropertyChanged("inn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10)]
        public string kpp {
            get {
                return this.kppField;
            }
            set {
                this.kppField = value;
                this.RaisePropertyChanged("kpp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=12)]
        public string phoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
                this.RaisePropertyChanged("phoneNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=13)]
        public string postalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
                this.RaisePropertyChanged("postalCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=14)]
        public string stateCode {
            get {
                return this.stateCodeField;
            }
            set {
                this.stateCodeField = value;
                this.RaisePropertyChanged("stateCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=15)]
        public string streetAndNumber {
            get {
                return this.streetAndNumberField;
            }
            set {
                this.streetAndNumberField = value;
                this.RaisePropertyChanged("streetAndNumber");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(organizationInfoModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(listMBAllExModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(relationshipsModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(localizationInfoXMLModel))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:wsedi")]
    public abstract partial class resultAbstract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageerrorField;
        
        private string resField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("message-error", Order=0)]
        public string messageerror {
            get {
                return this.messageerrorField;
            }
            set {
                this.messageerrorField = value;
                this.RaisePropertyChanged("messageerror");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string res {
            get {
                return this.resField;
            }
            set {
                this.resField = value;
                this.RaisePropertyChanged("res");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:wsedi")]
    public partial class organizationInfoModel : resultAbstract {
        
        private contentOrganizationInfo cntField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public contentOrganizationInfo cnt {
            get {
                return this.cntField;
            }
            set {
                this.cntField = value;
                this.RaisePropertyChanged("cnt");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:wsedi")]
    public partial class listMBAllExModel : resultAbstract {
        
        private documentInfo[] cntField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("document-info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public documentInfo[] cnt {
            get {
                return this.cntField;
            }
            set {
                this.cntField = value;
                this.RaisePropertyChanged("cnt");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:wsedi")]
    public partial class relationshipsModel : resultAbstract {
        
        private relation[] cntField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public relation[] cnt {
            get {
                return this.cntField;
            }
            set {
                this.cntField = value;
                this.RaisePropertyChanged("cnt");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:wsedi")]
    public partial class localizationInfoXMLModel : resultAbstract {
        
        private localizationInfo[] cntField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("localization-info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public localizationInfo[] cnt {
            get {
                return this.cntField;
            }
            set {
                this.cntField = value;
                this.RaisePropertyChanged("cnt");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:wsedi")]
    public partial class ediFileData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] fileDataField;
        
        private string fileNameField;
        
        private string resField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=0)]
        public byte[] fileData {
            get {
                return this.fileDataField;
            }
            set {
                this.fileDataField = value;
                this.RaisePropertyChanged("fileData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
                this.RaisePropertyChanged("fileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string res {
            get {
                return this.resField;
            }
            set {
                this.resField = value;
                this.RaisePropertyChanged("res");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getDocument", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class getDocumentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long documentId;
        
        public getDocumentRequest() {
        }
        
        public getDocumentRequest(string name, string password, long documentId) {
            this.name = name;
            this.password = password;
            this.documentId = documentId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getDocumentResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class getDocumentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public getDocumentResponse() {
        }
        
        public getDocumentResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="send", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class sendRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string partnerILN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentVersion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentStandard;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentTest;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string controlNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentContent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=9)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int timeout;
        
        public sendRequest() {
        }
        
        public sendRequest(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string controlNumber, string documentContent, int timeout) {
            this.name = name;
            this.password = password;
            this.partnerILN = partnerILN;
            this.documentType = documentType;
            this.documentVersion = documentVersion;
            this.documentStandard = documentStandard;
            this.documentTest = documentTest;
            this.controlNumber = controlNumber;
            this.documentContent = documentContent;
            this.timeout = timeout;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class sendResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public sendResponse() {
        }
        
        public sendResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="receive", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class receiveRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string partnerILN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trackingId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentStandard;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string changeDocumentStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int timeout;
        
        public receiveRequest() {
        }
        
        public receiveRequest(string name, string password, string partnerILN, string documentType, string trackingId, string documentStandard, string changeDocumentStatus, int timeout) {
            this.name = name;
            this.password = password;
            this.partnerILN = partnerILN;
            this.documentType = documentType;
            this.trackingId = trackingId;
            this.documentStandard = documentStandard;
            this.changeDocumentStatus = changeDocumentStatus;
            this.timeout = timeout;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="receiveResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class receiveResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public receiveResponse() {
        }
        
        public receiveResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="receiveBinary", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class receiveBinaryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string partnerILN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trackingId;
        
        public receiveBinaryRequest() {
        }
        
        public receiveBinaryRequest(string name, string password, string partnerILN, string documentType, string trackingId) {
            this.name = name;
            this.password = password;
            this.partnerILN = partnerILN;
            this.documentType = documentType;
            this.trackingId = trackingId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="receiveBinaryResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class receiveBinaryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.ediFileData @return;
        
        public receiveBinaryResponse() {
        }
        
        public receiveBinaryResponse(Edisoft.WebService.EdiWebService.ediFileData @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="execSQLtoDoc", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class execSQLtoDocRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @params;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string senderILN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string receiverILN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string docType;
        
        public execSQLtoDocRequest() {
        }
        
        public execSQLtoDocRequest(string name, string password, string uid, string @params, string senderILN, string receiverILN, string docType) {
            this.name = name;
            this.password = password;
            this.uid = uid;
            this.@params = @params;
            this.senderILN = senderILN;
            this.receiverILN = receiverILN;
            this.docType = docType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="execSQLtoDocResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class execSQLtoDocResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public execSQLtoDocResponse() {
        }
        
        public execSQLtoDocResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="needUpdate", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class needUpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int timeout;
        
        public needUpdateRequest() {
        }
        
        public needUpdateRequest(string name, string password, int timeout) {
            this.name = name;
            this.password = password;
            this.timeout = timeout;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="needUpdateResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class needUpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public needUpdateResponse() {
        }
        
        public needUpdateResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendPDA", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class sendPDARequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string partnerILN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentVersion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentStandard;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentTest;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string controlNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentContent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=9)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int timeout;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=10)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string creationType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=11)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hardwareId;
        
        public sendPDARequest() {
        }
        
        public sendPDARequest(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string controlNumber, string documentContent, int timeout, string creationType, string hardwareId) {
            this.name = name;
            this.password = password;
            this.partnerILN = partnerILN;
            this.documentType = documentType;
            this.documentVersion = documentVersion;
            this.documentStandard = documentStandard;
            this.documentTest = documentTest;
            this.controlNumber = controlNumber;
            this.documentContent = documentContent;
            this.timeout = timeout;
            this.creationType = creationType;
            this.hardwareId = hardwareId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendPDAResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class sendPDAResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public sendPDAResponse() {
        }
        
        public sendPDAResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendBinary", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class sendBinaryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string partnerIln;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] data;
        
        public sendBinaryRequest() {
        }
        
        public sendBinaryRequest(string name, string password, string partnerIln, string documentType, string fileName, byte[] data) {
            this.name = name;
            this.password = password;
            this.partnerIln = partnerIln;
            this.documentType = documentType;
            this.fileName = fileName;
            this.data = data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendBinaryResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class sendBinaryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public sendBinaryResponse() {
        }
        
        public sendBinaryResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="changeDocumentStatus", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class changeDocumentStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trackingId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string status;
        
        public changeDocumentStatusRequest() {
        }
        
        public changeDocumentStatusRequest(string name, string password, string trackingId, string status) {
            this.name = name;
            this.password = password;
            this.trackingId = trackingId;
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="changeDocumentStatusResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class changeDocumentStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public changeDocumentStatusResponse() {
        }
        
        public changeDocumentStatusResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="receivePDA", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class receivePDARequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string partnerILN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trackingId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentStandard;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string changeDocumentStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int timeout;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hardwareId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=9)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime lastUpdateDateTime;
        
        public receivePDARequest() {
        }
        
        public receivePDARequest(string name, string password, string partnerILN, string documentType, string trackingId, string documentStandard, string changeDocumentStatus, int timeout, string hardwareId, System.DateTime lastUpdateDateTime) {
            this.name = name;
            this.password = password;
            this.partnerILN = partnerILN;
            this.documentType = documentType;
            this.trackingId = trackingId;
            this.documentStandard = documentStandard;
            this.changeDocumentStatus = changeDocumentStatus;
            this.timeout = timeout;
            this.hardwareId = hardwareId;
            this.lastUpdateDateTime = lastUpdateDateTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="receivePDAResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class receivePDAResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public receivePDAResponse() {
        }
        
        public receivePDAResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listPB", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listPBRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string partnerILN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentVersion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentStandard;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentTest;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dateFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dateTo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=9)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string itemFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=10)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string itemTo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=11)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int timeout;
        
        public listPBRequest() {
        }
        
        public listPBRequest(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string dateFrom, string dateTo, string itemFrom, string itemTo, int timeout) {
            this.name = name;
            this.password = password;
            this.partnerILN = partnerILN;
            this.documentType = documentType;
            this.documentVersion = documentVersion;
            this.documentStandard = documentStandard;
            this.documentTest = documentTest;
            this.dateFrom = dateFrom;
            this.dateTo = dateTo;
            this.itemFrom = itemFrom;
            this.itemTo = itemTo;
            this.timeout = timeout;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listPBResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listPBResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public listPBResponse() {
        }
        
        public listPBResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="importDocument", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class importDocumentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemLogin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userLogin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string partnerILN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentGuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentCreationDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentContent;
        
        public importDocumentRequest() {
        }
        
        public importDocumentRequest(string systemLogin, string systemPassword, string userLogin, string userPassword, string partnerILN, string documentType, string documentGuid, string documentCreationDate, string documentContent) {
            this.systemLogin = systemLogin;
            this.systemPassword = systemPassword;
            this.userLogin = userLogin;
            this.userPassword = userPassword;
            this.partnerILN = partnerILN;
            this.documentType = documentType;
            this.documentGuid = documentGuid;
            this.documentCreationDate = documentCreationDate;
            this.documentContent = documentContent;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="importDocumentResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class importDocumentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public importDocumentResponse() {
        }
        
        public importDocumentResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listPBEx", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listPBExRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string partnerILN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentVersion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentStandard;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentTest;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dateFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dateTo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=9)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string itemFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=10)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string itemTo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=11)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string orderBy;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=12)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int timeout;
        
        public listPBExRequest() {
        }
        
        public listPBExRequest(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string dateFrom, string dateTo, string itemFrom, string itemTo, string orderBy, int timeout) {
            this.name = name;
            this.password = password;
            this.partnerILN = partnerILN;
            this.documentType = documentType;
            this.documentVersion = documentVersion;
            this.documentStandard = documentStandard;
            this.documentTest = documentTest;
            this.dateFrom = dateFrom;
            this.dateTo = dateTo;
            this.itemFrom = itemFrom;
            this.itemTo = itemTo;
            this.orderBy = orderBy;
            this.timeout = timeout;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listPBExResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listPBExResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public listPBExResponse() {
        }
        
        public listPBExResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listPBExAll", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listPBExAllRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        public listPBExAllRequest() {
        }
        
        public listPBExAllRequest(string name, string password) {
            this.name = name;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listPBExAllResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listPBExAllResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public listPBExAllResponse() {
        }
        
        public listPBExAllResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listMB", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listMBRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string partnerILN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentVersion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentStandard;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentTest;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int timeout;
        
        public listMBRequest() {
        }
        
        public listMBRequest(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string documentStatus, int timeout) {
            this.name = name;
            this.password = password;
            this.partnerILN = partnerILN;
            this.documentType = documentType;
            this.documentVersion = documentVersion;
            this.documentStandard = documentStandard;
            this.documentTest = documentTest;
            this.documentStatus = documentStatus;
            this.timeout = timeout;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listMBResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listMBResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public listMBResponse() {
        }
        
        public listMBResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listMBAll", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listMBAllRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool receiveBinary;
        
        public listMBAllRequest() {
        }
        
        public listMBAllRequest(string name, string password, bool receiveBinary) {
            this.name = name;
            this.password = password;
            this.receiveBinary = receiveBinary;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listMBAllResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listMBAllResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public listMBAllResponse() {
        }
        
        public listMBAllResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listMBAllEx", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listMBAllExRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool receiveBinary;
        
        public listMBAllExRequest() {
        }
        
        public listMBAllExRequest(string name, string password, bool receiveBinary) {
            this.name = name;
            this.password = password;
            this.receiveBinary = receiveBinary;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listMBAllExResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listMBAllExResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public listMBAllExResponse() {
        }
        
        public listMBAllExResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listMBAllExXML", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listMBAllExXMLRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool receiveBinary;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime lastDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime endDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string direction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int timeout;
        
        public listMBAllExXMLRequest() {
        }
        
        public listMBAllExXMLRequest(string name, string password, bool receiveBinary, System.DateTime lastDate, System.DateTime endDate, string uuid, string direction, string status, int timeout) {
            this.name = name;
            this.password = password;
            this.receiveBinary = receiveBinary;
            this.lastDate = lastDate;
            this.endDate = endDate;
            this.uuid = uuid;
            this.direction = direction;
            this.status = status;
            this.timeout = timeout;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listMBAllExXMLResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listMBAllExXMLResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.listMBAllExModel @return;
        
        public listMBAllExXMLResponse() {
        }
        
        public listMBAllExXMLResponse(Edisoft.WebService.EdiWebService.listMBAllExModel @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listMBEx", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listMBExRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string partnerILN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentVersion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentStandard;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentTest;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dateFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dateTo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=9)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string itemFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=10)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string itemTo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=11)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=12)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int timeout;
        
        public listMBExRequest() {
        }
        
        public listMBExRequest(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string dateFrom, string dateTo, string itemFrom, string itemTo, string documentStatus, int timeout) {
            this.name = name;
            this.password = password;
            this.partnerILN = partnerILN;
            this.documentType = documentType;
            this.documentVersion = documentVersion;
            this.documentStandard = documentStandard;
            this.documentTest = documentTest;
            this.dateFrom = dateFrom;
            this.dateTo = dateTo;
            this.itemFrom = itemFrom;
            this.itemTo = itemTo;
            this.documentStatus = documentStatus;
            this.timeout = timeout;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listMBExResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listMBExResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public listMBExResponse() {
        }
        
        public listMBExResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listMBLast", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listMBLastRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        public listMBLastRequest() {
        }
        
        public listMBLastRequest(string name, string password) {
            this.name = name;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listMBLastResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listMBLastResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public listMBLastResponse() {
        }
        
        public listMBLastResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listMBRef", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listMBRefRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string partnerILN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute("documentNumber", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] documentNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentType;
        
        public listMBRefRequest() {
        }
        
        public listMBRefRequest(string name, string password, string partnerILN, string[] documentNumber, string documentType) {
            this.name = name;
            this.password = password;
            this.partnerILN = partnerILN;
            this.documentNumber = documentNumber;
            this.documentType = documentType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listMBRefResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listMBRefResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.listMBAllExModel @return;
        
        public listMBRefResponse() {
        }
        
        public listMBRefResponse(Edisoft.WebService.EdiWebService.listMBAllExModel @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="relationshipsXML", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class relationshipsXMLRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int timeout;
        
        public relationshipsXMLRequest() {
        }
        
        public relationshipsXMLRequest(string name, string password, int timeout) {
            this.name = name;
            this.password = password;
            this.timeout = timeout;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="relationshipsXMLResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class relationshipsXMLResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.relationshipsModel @return;
        
        public relationshipsXMLResponse() {
        }
        
        public relationshipsXMLResponse(Edisoft.WebService.EdiWebService.relationshipsModel @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="execSQL", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class execSQLRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @params;
        
        public execSQLRequest() {
        }
        
        public execSQLRequest(string name, string password, string uid, string @params) {
            this.name = name;
            this.password = password;
            this.uid = uid;
            this.@params = @params;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="execSQLResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class execSQLResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public execSQLResponse() {
        }
        
        public execSQLResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="generateDocument", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class generateDocumentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trackingId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentType;
        
        public generateDocumentRequest() {
        }
        
        public generateDocumentRequest(string name, string password, string trackingId, string documentType) {
            this.name = name;
            this.password = password;
            this.trackingId = trackingId;
            this.documentType = documentType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="generateDocumentResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class generateDocumentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public generateDocumentResponse() {
        }
        
        public generateDocumentResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="localizationInfoXML", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class localizationInfoXMLRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sender;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string headquarters;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string localization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string regionCode;
        
        public localizationInfoXMLRequest() {
        }
        
        public localizationInfoXMLRequest(string name, string password, string type, string sender, string headquarters, string localization, string regionCode) {
            this.name = name;
            this.password = password;
            this.type = type;
            this.sender = sender;
            this.headquarters = headquarters;
            this.localization = localization;
            this.regionCode = regionCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="localizationInfoXMLResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class localizationInfoXMLResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.localizationInfoXMLModel @return;
        
        public localizationInfoXMLResponse() {
        }
        
        public localizationInfoXMLResponse(Edisoft.WebService.EdiWebService.localizationInfoXMLModel @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkPacketStatus", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class checkPacketStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long packetId;
        
        public checkPacketStatusRequest() {
        }
        
        public checkPacketStatusRequest(string name, string password, long packetId) {
            this.name = name;
            this.password = password;
            this.packetId = packetId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkPacketStatusResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class checkPacketStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public checkPacketStatusResponse() {
        }
        
        public checkPacketStatusResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listForIntegration", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listForIntegrationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemLogin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userLogin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string receiver;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string docType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string itemCount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dateFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dateTo;
        
        public listForIntegrationRequest() {
        }
        
        public listForIntegrationRequest(string systemLogin, string systemPassword, string userLogin, string userPassword, string receiver, string docType, string itemCount, string dateFrom, string dateTo) {
            this.systemLogin = systemLogin;
            this.systemPassword = systemPassword;
            this.userLogin = userLogin;
            this.userPassword = userPassword;
            this.receiver = receiver;
            this.docType = docType;
            this.itemCount = itemCount;
            this.dateFrom = dateFrom;
            this.dateTo = dateTo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listForIntegrationResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listForIntegrationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public listForIntegrationResponse() {
        }
        
        public listForIntegrationResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listBinaryforIntegrationFNS", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listBinaryforIntegrationFNSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userLogin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trackingId;
        
        public listBinaryforIntegrationFNSRequest() {
        }
        
        public listBinaryforIntegrationFNSRequest(string userLogin, string userPassword, string trackingId) {
            this.userLogin = userLogin;
            this.userPassword = userPassword;
            this.trackingId = trackingId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listBinaryforIntegrationFNSResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listBinaryforIntegrationFNSResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public listBinaryforIntegrationFNSResponse() {
        }
        
        public listBinaryforIntegrationFNSResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="receiveDocForIntegration", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class receiveDocForIntegrationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemLogin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userLogin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trackingId;
        
        public receiveDocForIntegrationRequest() {
        }
        
        public receiveDocForIntegrationRequest(string systemLogin, string systemPassword, string userLogin, string userPassword, string trackingId) {
            this.systemLogin = systemLogin;
            this.systemPassword = systemPassword;
            this.userLogin = userLogin;
            this.userPassword = userPassword;
            this.trackingId = trackingId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="receiveDocForIntegrationResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class receiveDocForIntegrationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public receiveDocForIntegrationResponse() {
        }
        
        public receiveDocForIntegrationResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setIntegrationState", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class setIntegrationStateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemLogin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userLogin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trackingId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string state;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string message;
        
        public setIntegrationStateRequest() {
        }
        
        public setIntegrationStateRequest(string systemLogin, string systemPassword, string userLogin, string userPassword, string trackingId, string state, string message) {
            this.systemLogin = systemLogin;
            this.systemPassword = systemPassword;
            this.userLogin = userLogin;
            this.userPassword = userPassword;
            this.trackingId = trackingId;
            this.state = state;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setIntegrationStateResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class setIntegrationStateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public setIntegrationStateResponse() {
        }
        
        public setIntegrationStateResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="receiveBinaryforIntegration", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class receiveBinaryforIntegrationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemLogin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userLogin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trackingId;
        
        public receiveBinaryforIntegrationRequest() {
        }
        
        public receiveBinaryforIntegrationRequest(string systemLogin, string systemPassword, string userLogin, string userPassword, string trackingId) {
            this.systemLogin = systemLogin;
            this.systemPassword = systemPassword;
            this.userLogin = userLogin;
            this.userPassword = userPassword;
            this.trackingId = trackingId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="receiveBinaryforIntegrationResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class receiveBinaryforIntegrationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.ediFileData @return;
        
        public receiveBinaryforIntegrationResponse() {
        }
        
        public receiveBinaryforIntegrationResponse(Edisoft.WebService.EdiWebService.ediFileData @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listForIntegrationErrors", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listForIntegrationErrorsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemLogin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemPassword;
        
        public listForIntegrationErrorsRequest() {
        }
        
        public listForIntegrationErrorsRequest(string systemLogin, string systemPassword) {
            this.systemLogin = systemLogin;
            this.systemPassword = systemPassword;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listForIntegrationErrorsResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listForIntegrationErrorsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public listForIntegrationErrorsResponse() {
        }
        
        public listForIntegrationErrorsResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listForIntegrationIgnored", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listForIntegrationIgnoredRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemLogin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemPassword;
        
        public listForIntegrationIgnoredRequest() {
        }
        
        public listForIntegrationIgnoredRequest(string systemLogin, string systemPassword) {
            this.systemLogin = systemLogin;
            this.systemPassword = systemPassword;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listForIntegrationIgnoredResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listForIntegrationIgnoredResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public listForIntegrationIgnoredResponse() {
        }
        
        public listForIntegrationIgnoredResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getIntegrationState", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class getIntegrationStateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemLogin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trackingId;
        
        public getIntegrationStateRequest() {
        }
        
        public getIntegrationStateRequest(string systemLogin, string systemPassword, string trackingId) {
            this.systemLogin = systemLogin;
            this.systemPassword = systemPassword;
            this.trackingId = trackingId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getIntegrationStateResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class getIntegrationStateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public getIntegrationStateResponse() {
        }
        
        public getIntegrationStateResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="reprocessIntegrationDocs", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class reprocessIntegrationDocsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemLogin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trackingIds;
        
        public reprocessIntegrationDocsRequest() {
        }
        
        public reprocessIntegrationDocsRequest(string systemLogin, string systemPassword, string trackingIds) {
            this.systemLogin = systemLogin;
            this.systemPassword = systemPassword;
            this.trackingIds = trackingIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="reprocessIntegrationDocsResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class reprocessIntegrationDocsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public reprocessIntegrationDocsResponse() {
        }
        
        public reprocessIntegrationDocsResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listForIntegrationErrorsPattern", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listForIntegrationErrorsPatternRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemLogin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pattern;
        
        public listForIntegrationErrorsPatternRequest() {
        }
        
        public listForIntegrationErrorsPatternRequest(string systemLogin, string systemPassword, string pattern) {
            this.systemLogin = systemLogin;
            this.systemPassword = systemPassword;
            this.pattern = pattern;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listForIntegrationErrorsPatternResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class listForIntegrationErrorsPatternResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public listForIntegrationErrorsPatternResponse() {
        }
        
        public listForIntegrationErrorsPatternResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="receivePrintForm", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class receivePrintFormRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string partnerILN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trackingId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute("filename-orig", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string filenameorig;
        
        public receivePrintFormRequest() {
        }
        
        public receivePrintFormRequest(string name, string password, string partnerILN, string documentType, string trackingId, string filenameorig) {
            this.name = name;
            this.password = password;
            this.partnerILN = partnerILN;
            this.documentType = documentType;
            this.trackingId = trackingId;
            this.filenameorig = filenameorig;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="receivePrintFormResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class receivePrintFormResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.ediFileData @return;
        
        public receivePrintFormResponse() {
        }
        
        public receivePrintFormResponse(Edisoft.WebService.EdiWebService.ediFileData @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="organizationInfo", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class organizationInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string inn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string kpp;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ogrn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fnsId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gln;
        
        public organizationInfoRequest() {
        }
        
        public organizationInfoRequest(string name, string password, string inn, string kpp, string ogrn, string fnsId, string gln) {
            this.name = name;
            this.password = password;
            this.inn = inn;
            this.kpp = kpp;
            this.ogrn = ogrn;
            this.fnsId = fnsId;
            this.gln = gln;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="organizationInfoResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class organizationInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public organizationInfoResponse() {
        }
        
        public organizationInfoResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="organizationInfoXML", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class organizationInfoXMLRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string inn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string kpp;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ogrn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fnsId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gln;
        
        public organizationInfoXMLRequest() {
        }
        
        public organizationInfoXMLRequest(string name, string password, string inn, string kpp, string ogrn, string fnsId, string gln) {
            this.name = name;
            this.password = password;
            this.inn = inn;
            this.kpp = kpp;
            this.ogrn = ogrn;
            this.fnsId = fnsId;
            this.gln = gln;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="organizationInfoXMLResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class organizationInfoXMLResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.organizationInfoModel @return;
        
        public organizationInfoXMLResponse() {
        }
        
        public organizationInfoXMLResponse(Edisoft.WebService.EdiWebService.organizationInfoModel @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="receiveFnsArchive", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class receiveFnsArchiveRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long trackingId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fileId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool includePdf;
        
        public receiveFnsArchiveRequest() {
        }
        
        public receiveFnsArchiveRequest(string name, string password, long trackingId, string fileId, bool includePdf) {
            this.name = name;
            this.password = password;
            this.trackingId = trackingId;
            this.fileId = fileId;
            this.includePdf = includePdf;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="receiveFnsArchiveResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class receiveFnsArchiveResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.ediFileData @return;
        
        public receiveFnsArchiveResponse() {
        }
        
        public receiveFnsArchiveResponse(Edisoft.WebService.EdiWebService.ediFileData @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="relationships", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class relationshipsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int timeout;
        
        public relationshipsRequest() {
        }
        
        public relationshipsRequest(string name, string password, int timeout) {
            this.name = name;
            this.password = password;
            this.timeout = timeout;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="relationshipsResponse", WrapperNamespace="urn:wsedi", IsWrapped=true)]
    public partial class relationshipsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:wsedi", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Edisoft.WebService.EdiWebService.retRes @return;
        
        public relationshipsResponse() {
        }
        
        public relationshipsResponse(Edisoft.WebService.EdiWebService.retRes @return) {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EDIWebServicePortTypeChannel : Edisoft.WebService.EdiWebService.EDIWebServicePortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class sendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public sendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class receiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public receiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class receiveBinaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public receiveBinaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.ediFileData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.ediFileData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class execSQLtoDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public execSQLtoDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class needUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public needUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class sendPDACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public sendPDACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class sendBinaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public sendBinaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class changeDocumentStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public changeDocumentStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class receivePDACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public receivePDACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class listPBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public listPBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class importDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public importDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class listPBExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public listPBExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class listPBExAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public listPBExAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class listMBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public listMBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class listMBAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public listMBAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class listMBAllExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public listMBAllExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class listMBAllExXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public listMBAllExXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.listMBAllExModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.listMBAllExModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class listMBExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public listMBExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class listMBLastCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public listMBLastCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class listMBRefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public listMBRefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.listMBAllExModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.listMBAllExModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class relationshipsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public relationshipsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.relationshipsModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.relationshipsModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class execSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public execSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class generateDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public generateDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class localizationInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public localizationInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.localizationInfoXMLModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.localizationInfoXMLModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class checkPacketStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public checkPacketStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class listForIntegrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public listForIntegrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class listBinaryforIntegrationFNSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public listBinaryforIntegrationFNSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class receiveDocForIntegrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public receiveDocForIntegrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class setIntegrationStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public setIntegrationStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class receiveBinaryforIntegrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public receiveBinaryforIntegrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.ediFileData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.ediFileData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class listForIntegrationErrorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public listForIntegrationErrorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class listForIntegrationIgnoredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public listForIntegrationIgnoredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getIntegrationStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getIntegrationStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class reprocessIntegrationDocsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public reprocessIntegrationDocsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class listForIntegrationErrorsPatternCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public listForIntegrationErrorsPatternCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class receivePrintFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public receivePrintFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.ediFileData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.ediFileData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class organizationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public organizationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class organizationInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public organizationInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.organizationInfoModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.organizationInfoModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class receiveFnsArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public receiveFnsArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.ediFileData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.ediFileData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class relationshipsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public relationshipsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Edisoft.WebService.EdiWebService.retRes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Edisoft.WebService.EdiWebService.retRes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EDIWebServicePortTypeClient : System.ServiceModel.ClientBase<Edisoft.WebService.EdiWebService.EDIWebServicePortType>, Edisoft.WebService.EdiWebService.EDIWebServicePortType {
        
        private BeginOperationDelegate onBegingetDocumentDelegate;
        
        private EndOperationDelegate onEndgetDocumentDelegate;
        
        private System.Threading.SendOrPostCallback ongetDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginsendDelegate;
        
        private EndOperationDelegate onEndsendDelegate;
        
        private System.Threading.SendOrPostCallback onsendCompletedDelegate;
        
        private BeginOperationDelegate onBeginreceiveDelegate;
        
        private EndOperationDelegate onEndreceiveDelegate;
        
        private System.Threading.SendOrPostCallback onreceiveCompletedDelegate;
        
        private BeginOperationDelegate onBeginreceiveBinaryDelegate;
        
        private EndOperationDelegate onEndreceiveBinaryDelegate;
        
        private System.Threading.SendOrPostCallback onreceiveBinaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginexecSQLtoDocDelegate;
        
        private EndOperationDelegate onEndexecSQLtoDocDelegate;
        
        private System.Threading.SendOrPostCallback onexecSQLtoDocCompletedDelegate;
        
        private BeginOperationDelegate onBeginneedUpdateDelegate;
        
        private EndOperationDelegate onEndneedUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onneedUpdateCompletedDelegate;
        
        private BeginOperationDelegate onBeginsendPDADelegate;
        
        private EndOperationDelegate onEndsendPDADelegate;
        
        private System.Threading.SendOrPostCallback onsendPDACompletedDelegate;
        
        private BeginOperationDelegate onBeginsendBinaryDelegate;
        
        private EndOperationDelegate onEndsendBinaryDelegate;
        
        private System.Threading.SendOrPostCallback onsendBinaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginchangeDocumentStatusDelegate;
        
        private EndOperationDelegate onEndchangeDocumentStatusDelegate;
        
        private System.Threading.SendOrPostCallback onchangeDocumentStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginreceivePDADelegate;
        
        private EndOperationDelegate onEndreceivePDADelegate;
        
        private System.Threading.SendOrPostCallback onreceivePDACompletedDelegate;
        
        private BeginOperationDelegate onBeginlistPBDelegate;
        
        private EndOperationDelegate onEndlistPBDelegate;
        
        private System.Threading.SendOrPostCallback onlistPBCompletedDelegate;
        
        private BeginOperationDelegate onBeginimportDocumentDelegate;
        
        private EndOperationDelegate onEndimportDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onimportDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginlistPBExDelegate;
        
        private EndOperationDelegate onEndlistPBExDelegate;
        
        private System.Threading.SendOrPostCallback onlistPBExCompletedDelegate;
        
        private BeginOperationDelegate onBeginlistPBExAllDelegate;
        
        private EndOperationDelegate onEndlistPBExAllDelegate;
        
        private System.Threading.SendOrPostCallback onlistPBExAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginlistMBDelegate;
        
        private EndOperationDelegate onEndlistMBDelegate;
        
        private System.Threading.SendOrPostCallback onlistMBCompletedDelegate;
        
        private BeginOperationDelegate onBeginlistMBAllDelegate;
        
        private EndOperationDelegate onEndlistMBAllDelegate;
        
        private System.Threading.SendOrPostCallback onlistMBAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginlistMBAllExDelegate;
        
        private EndOperationDelegate onEndlistMBAllExDelegate;
        
        private System.Threading.SendOrPostCallback onlistMBAllExCompletedDelegate;
        
        private BeginOperationDelegate onBeginlistMBAllExXMLDelegate;
        
        private EndOperationDelegate onEndlistMBAllExXMLDelegate;
        
        private System.Threading.SendOrPostCallback onlistMBAllExXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginlistMBExDelegate;
        
        private EndOperationDelegate onEndlistMBExDelegate;
        
        private System.Threading.SendOrPostCallback onlistMBExCompletedDelegate;
        
        private BeginOperationDelegate onBeginlistMBLastDelegate;
        
        private EndOperationDelegate onEndlistMBLastDelegate;
        
        private System.Threading.SendOrPostCallback onlistMBLastCompletedDelegate;
        
        private BeginOperationDelegate onBeginlistMBRefDelegate;
        
        private EndOperationDelegate onEndlistMBRefDelegate;
        
        private System.Threading.SendOrPostCallback onlistMBRefCompletedDelegate;
        
        private BeginOperationDelegate onBeginrelationshipsXMLDelegate;
        
        private EndOperationDelegate onEndrelationshipsXMLDelegate;
        
        private System.Threading.SendOrPostCallback onrelationshipsXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginexecSQLDelegate;
        
        private EndOperationDelegate onEndexecSQLDelegate;
        
        private System.Threading.SendOrPostCallback onexecSQLCompletedDelegate;
        
        private BeginOperationDelegate onBegingenerateDocumentDelegate;
        
        private EndOperationDelegate onEndgenerateDocumentDelegate;
        
        private System.Threading.SendOrPostCallback ongenerateDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginlocalizationInfoXMLDelegate;
        
        private EndOperationDelegate onEndlocalizationInfoXMLDelegate;
        
        private System.Threading.SendOrPostCallback onlocalizationInfoXMLCompletedDelegate;
        
        private BeginOperationDelegate onBegincheckPacketStatusDelegate;
        
        private EndOperationDelegate onEndcheckPacketStatusDelegate;
        
        private System.Threading.SendOrPostCallback oncheckPacketStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginlistForIntegrationDelegate;
        
        private EndOperationDelegate onEndlistForIntegrationDelegate;
        
        private System.Threading.SendOrPostCallback onlistForIntegrationCompletedDelegate;
        
        private BeginOperationDelegate onBeginlistBinaryforIntegrationFNSDelegate;
        
        private EndOperationDelegate onEndlistBinaryforIntegrationFNSDelegate;
        
        private System.Threading.SendOrPostCallback onlistBinaryforIntegrationFNSCompletedDelegate;
        
        private BeginOperationDelegate onBeginreceiveDocForIntegrationDelegate;
        
        private EndOperationDelegate onEndreceiveDocForIntegrationDelegate;
        
        private System.Threading.SendOrPostCallback onreceiveDocForIntegrationCompletedDelegate;
        
        private BeginOperationDelegate onBeginsetIntegrationStateDelegate;
        
        private EndOperationDelegate onEndsetIntegrationStateDelegate;
        
        private System.Threading.SendOrPostCallback onsetIntegrationStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginreceiveBinaryforIntegrationDelegate;
        
        private EndOperationDelegate onEndreceiveBinaryforIntegrationDelegate;
        
        private System.Threading.SendOrPostCallback onreceiveBinaryforIntegrationCompletedDelegate;
        
        private BeginOperationDelegate onBeginlistForIntegrationErrorsDelegate;
        
        private EndOperationDelegate onEndlistForIntegrationErrorsDelegate;
        
        private System.Threading.SendOrPostCallback onlistForIntegrationErrorsCompletedDelegate;
        
        private BeginOperationDelegate onBeginlistForIntegrationIgnoredDelegate;
        
        private EndOperationDelegate onEndlistForIntegrationIgnoredDelegate;
        
        private System.Threading.SendOrPostCallback onlistForIntegrationIgnoredCompletedDelegate;
        
        private BeginOperationDelegate onBegingetIntegrationStateDelegate;
        
        private EndOperationDelegate onEndgetIntegrationStateDelegate;
        
        private System.Threading.SendOrPostCallback ongetIntegrationStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginreprocessIntegrationDocsDelegate;
        
        private EndOperationDelegate onEndreprocessIntegrationDocsDelegate;
        
        private System.Threading.SendOrPostCallback onreprocessIntegrationDocsCompletedDelegate;
        
        private BeginOperationDelegate onBeginlistForIntegrationErrorsPatternDelegate;
        
        private EndOperationDelegate onEndlistForIntegrationErrorsPatternDelegate;
        
        private System.Threading.SendOrPostCallback onlistForIntegrationErrorsPatternCompletedDelegate;
        
        private BeginOperationDelegate onBeginreceivePrintFormDelegate;
        
        private EndOperationDelegate onEndreceivePrintFormDelegate;
        
        private System.Threading.SendOrPostCallback onreceivePrintFormCompletedDelegate;
        
        private BeginOperationDelegate onBeginorganizationInfoDelegate;
        
        private EndOperationDelegate onEndorganizationInfoDelegate;
        
        private System.Threading.SendOrPostCallback onorganizationInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginorganizationInfoXMLDelegate;
        
        private EndOperationDelegate onEndorganizationInfoXMLDelegate;
        
        private System.Threading.SendOrPostCallback onorganizationInfoXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginreceiveFnsArchiveDelegate;
        
        private EndOperationDelegate onEndreceiveFnsArchiveDelegate;
        
        private System.Threading.SendOrPostCallback onreceiveFnsArchiveCompletedDelegate;
        
        private BeginOperationDelegate onBeginrelationshipsDelegate;
        
        private EndOperationDelegate onEndrelationshipsDelegate;
        
        private System.Threading.SendOrPostCallback onrelationshipsCompletedDelegate;
        
        public EDIWebServicePortTypeClient() {
        }
        
        public EDIWebServicePortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EDIWebServicePortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EDIWebServicePortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EDIWebServicePortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<getDocumentCompletedEventArgs> getDocumentCompleted;
        
        public event System.EventHandler<sendCompletedEventArgs> sendCompleted;
        
        public event System.EventHandler<receiveCompletedEventArgs> receiveCompleted;
        
        public event System.EventHandler<receiveBinaryCompletedEventArgs> receiveBinaryCompleted;
        
        public event System.EventHandler<execSQLtoDocCompletedEventArgs> execSQLtoDocCompleted;
        
        public event System.EventHandler<needUpdateCompletedEventArgs> needUpdateCompleted;
        
        public event System.EventHandler<sendPDACompletedEventArgs> sendPDACompleted;
        
        public event System.EventHandler<sendBinaryCompletedEventArgs> sendBinaryCompleted;
        
        public event System.EventHandler<changeDocumentStatusCompletedEventArgs> changeDocumentStatusCompleted;
        
        public event System.EventHandler<receivePDACompletedEventArgs> receivePDACompleted;
        
        public event System.EventHandler<listPBCompletedEventArgs> listPBCompleted;
        
        public event System.EventHandler<importDocumentCompletedEventArgs> importDocumentCompleted;
        
        public event System.EventHandler<listPBExCompletedEventArgs> listPBExCompleted;
        
        public event System.EventHandler<listPBExAllCompletedEventArgs> listPBExAllCompleted;
        
        public event System.EventHandler<listMBCompletedEventArgs> listMBCompleted;
        
        public event System.EventHandler<listMBAllCompletedEventArgs> listMBAllCompleted;
        
        public event System.EventHandler<listMBAllExCompletedEventArgs> listMBAllExCompleted;
        
        public event System.EventHandler<listMBAllExXMLCompletedEventArgs> listMBAllExXMLCompleted;
        
        public event System.EventHandler<listMBExCompletedEventArgs> listMBExCompleted;
        
        public event System.EventHandler<listMBLastCompletedEventArgs> listMBLastCompleted;
        
        public event System.EventHandler<listMBRefCompletedEventArgs> listMBRefCompleted;
        
        public event System.EventHandler<relationshipsXMLCompletedEventArgs> relationshipsXMLCompleted;
        
        public event System.EventHandler<execSQLCompletedEventArgs> execSQLCompleted;
        
        public event System.EventHandler<generateDocumentCompletedEventArgs> generateDocumentCompleted;
        
        public event System.EventHandler<localizationInfoXMLCompletedEventArgs> localizationInfoXMLCompleted;
        
        public event System.EventHandler<checkPacketStatusCompletedEventArgs> checkPacketStatusCompleted;
        
        public event System.EventHandler<listForIntegrationCompletedEventArgs> listForIntegrationCompleted;
        
        public event System.EventHandler<listBinaryforIntegrationFNSCompletedEventArgs> listBinaryforIntegrationFNSCompleted;
        
        public event System.EventHandler<receiveDocForIntegrationCompletedEventArgs> receiveDocForIntegrationCompleted;
        
        public event System.EventHandler<setIntegrationStateCompletedEventArgs> setIntegrationStateCompleted;
        
        public event System.EventHandler<receiveBinaryforIntegrationCompletedEventArgs> receiveBinaryforIntegrationCompleted;
        
        public event System.EventHandler<listForIntegrationErrorsCompletedEventArgs> listForIntegrationErrorsCompleted;
        
        public event System.EventHandler<listForIntegrationIgnoredCompletedEventArgs> listForIntegrationIgnoredCompleted;
        
        public event System.EventHandler<getIntegrationStateCompletedEventArgs> getIntegrationStateCompleted;
        
        public event System.EventHandler<reprocessIntegrationDocsCompletedEventArgs> reprocessIntegrationDocsCompleted;
        
        public event System.EventHandler<listForIntegrationErrorsPatternCompletedEventArgs> listForIntegrationErrorsPatternCompleted;
        
        public event System.EventHandler<receivePrintFormCompletedEventArgs> receivePrintFormCompleted;
        
        public event System.EventHandler<organizationInfoCompletedEventArgs> organizationInfoCompleted;
        
        public event System.EventHandler<organizationInfoXMLCompletedEventArgs> organizationInfoXMLCompleted;
        
        public event System.EventHandler<receiveFnsArchiveCompletedEventArgs> receiveFnsArchiveCompleted;
        
        public event System.EventHandler<relationshipsCompletedEventArgs> relationshipsCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.getDocumentResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.getDocument(Edisoft.WebService.EdiWebService.getDocumentRequest request) {
            return base.Channel.getDocument(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes getDocument(string name, string password, long documentId) {
            Edisoft.WebService.EdiWebService.getDocumentRequest inValue = new Edisoft.WebService.EdiWebService.getDocumentRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.documentId = documentId;
            Edisoft.WebService.EdiWebService.getDocumentResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).getDocument(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BegingetDocument(Edisoft.WebService.EdiWebService.getDocumentRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetDocument(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetDocument(string name, string password, long documentId, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.getDocumentRequest inValue = new Edisoft.WebService.EdiWebService.getDocumentRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.documentId = documentId;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BegingetDocument(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.getDocumentResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndgetDocument(System.IAsyncResult result) {
            return base.Channel.EndgetDocument(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndgetDocument(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.getDocumentResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndgetDocument(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBegingetDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            long documentId = ((long)(inValues[2]));
            return this.BegingetDocument(name, password, documentId, callback, asyncState);
        }
        
        private object[] OnEndgetDocument(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndgetDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetDocumentCompleted(object state) {
            if ((this.getDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getDocumentCompleted(this, new getDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getDocumentAsync(string name, string password, long documentId) {
            this.getDocumentAsync(name, password, documentId, null);
        }
        
        public void getDocumentAsync(string name, string password, long documentId, object userState) {
            if ((this.onBegingetDocumentDelegate == null)) {
                this.onBegingetDocumentDelegate = new BeginOperationDelegate(this.OnBegingetDocument);
            }
            if ((this.onEndgetDocumentDelegate == null)) {
                this.onEndgetDocumentDelegate = new EndOperationDelegate(this.OnEndgetDocument);
            }
            if ((this.ongetDocumentCompletedDelegate == null)) {
                this.ongetDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetDocumentCompleted);
            }
            base.InvokeAsync(this.onBegingetDocumentDelegate, new object[] {
                        name,
                        password,
                        documentId}, this.onEndgetDocumentDelegate, this.ongetDocumentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.sendResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.send(Edisoft.WebService.EdiWebService.sendRequest request) {
            return base.Channel.send(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes send(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string controlNumber, string documentContent, int timeout) {
            Edisoft.WebService.EdiWebService.sendRequest inValue = new Edisoft.WebService.EdiWebService.sendRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerILN = partnerILN;
            inValue.documentType = documentType;
            inValue.documentVersion = documentVersion;
            inValue.documentStandard = documentStandard;
            inValue.documentTest = documentTest;
            inValue.controlNumber = controlNumber;
            inValue.documentContent = documentContent;
            inValue.timeout = timeout;
            Edisoft.WebService.EdiWebService.sendResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).send(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.Beginsend(Edisoft.WebService.EdiWebService.sendRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginsend(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult Beginsend(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string controlNumber, string documentContent, int timeout, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.sendRequest inValue = new Edisoft.WebService.EdiWebService.sendRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerILN = partnerILN;
            inValue.documentType = documentType;
            inValue.documentVersion = documentVersion;
            inValue.documentStandard = documentStandard;
            inValue.documentTest = documentTest;
            inValue.controlNumber = controlNumber;
            inValue.documentContent = documentContent;
            inValue.timeout = timeout;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).Beginsend(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.sendResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.Endsend(System.IAsyncResult result) {
            return base.Channel.Endsend(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes Endsend(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.sendResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).Endsend(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginsend(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string partnerILN = ((string)(inValues[2]));
            string documentType = ((string)(inValues[3]));
            string documentVersion = ((string)(inValues[4]));
            string documentStandard = ((string)(inValues[5]));
            string documentTest = ((string)(inValues[6]));
            string controlNumber = ((string)(inValues[7]));
            string documentContent = ((string)(inValues[8]));
            int timeout = ((int)(inValues[9]));
            return this.Beginsend(name, password, partnerILN, documentType, documentVersion, documentStandard, documentTest, controlNumber, documentContent, timeout, callback, asyncState);
        }
        
        private object[] OnEndsend(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.Endsend(result);
            return new object[] {
                    retVal};
        }
        
        private void OnsendCompleted(object state) {
            if ((this.sendCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.sendCompleted(this, new sendCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void sendAsync(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string controlNumber, string documentContent, int timeout) {
            this.sendAsync(name, password, partnerILN, documentType, documentVersion, documentStandard, documentTest, controlNumber, documentContent, timeout, null);
        }
        
        public void sendAsync(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string controlNumber, string documentContent, int timeout, object userState) {
            if ((this.onBeginsendDelegate == null)) {
                this.onBeginsendDelegate = new BeginOperationDelegate(this.OnBeginsend);
            }
            if ((this.onEndsendDelegate == null)) {
                this.onEndsendDelegate = new EndOperationDelegate(this.OnEndsend);
            }
            if ((this.onsendCompletedDelegate == null)) {
                this.onsendCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsendCompleted);
            }
            base.InvokeAsync(this.onBeginsendDelegate, new object[] {
                        name,
                        password,
                        partnerILN,
                        documentType,
                        documentVersion,
                        documentStandard,
                        documentTest,
                        controlNumber,
                        documentContent,
                        timeout}, this.onEndsendDelegate, this.onsendCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.receiveResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.receive(Edisoft.WebService.EdiWebService.receiveRequest request) {
            return base.Channel.receive(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes receive(string name, string password, string partnerILN, string documentType, string trackingId, string documentStandard, string changeDocumentStatus, int timeout) {
            Edisoft.WebService.EdiWebService.receiveRequest inValue = new Edisoft.WebService.EdiWebService.receiveRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerILN = partnerILN;
            inValue.documentType = documentType;
            inValue.trackingId = trackingId;
            inValue.documentStandard = documentStandard;
            inValue.changeDocumentStatus = changeDocumentStatus;
            inValue.timeout = timeout;
            Edisoft.WebService.EdiWebService.receiveResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).receive(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.Beginreceive(Edisoft.WebService.EdiWebService.receiveRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginreceive(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult Beginreceive(string name, string password, string partnerILN, string documentType, string trackingId, string documentStandard, string changeDocumentStatus, int timeout, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.receiveRequest inValue = new Edisoft.WebService.EdiWebService.receiveRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerILN = partnerILN;
            inValue.documentType = documentType;
            inValue.trackingId = trackingId;
            inValue.documentStandard = documentStandard;
            inValue.changeDocumentStatus = changeDocumentStatus;
            inValue.timeout = timeout;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).Beginreceive(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.receiveResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.Endreceive(System.IAsyncResult result) {
            return base.Channel.Endreceive(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes Endreceive(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.receiveResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).Endreceive(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginreceive(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string partnerILN = ((string)(inValues[2]));
            string documentType = ((string)(inValues[3]));
            string trackingId = ((string)(inValues[4]));
            string documentStandard = ((string)(inValues[5]));
            string changeDocumentStatus = ((string)(inValues[6]));
            int timeout = ((int)(inValues[7]));
            return this.Beginreceive(name, password, partnerILN, documentType, trackingId, documentStandard, changeDocumentStatus, timeout, callback, asyncState);
        }
        
        private object[] OnEndreceive(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.Endreceive(result);
            return new object[] {
                    retVal};
        }
        
        private void OnreceiveCompleted(object state) {
            if ((this.receiveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.receiveCompleted(this, new receiveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void receiveAsync(string name, string password, string partnerILN, string documentType, string trackingId, string documentStandard, string changeDocumentStatus, int timeout) {
            this.receiveAsync(name, password, partnerILN, documentType, trackingId, documentStandard, changeDocumentStatus, timeout, null);
        }
        
        public void receiveAsync(string name, string password, string partnerILN, string documentType, string trackingId, string documentStandard, string changeDocumentStatus, int timeout, object userState) {
            if ((this.onBeginreceiveDelegate == null)) {
                this.onBeginreceiveDelegate = new BeginOperationDelegate(this.OnBeginreceive);
            }
            if ((this.onEndreceiveDelegate == null)) {
                this.onEndreceiveDelegate = new EndOperationDelegate(this.OnEndreceive);
            }
            if ((this.onreceiveCompletedDelegate == null)) {
                this.onreceiveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnreceiveCompleted);
            }
            base.InvokeAsync(this.onBeginreceiveDelegate, new object[] {
                        name,
                        password,
                        partnerILN,
                        documentType,
                        trackingId,
                        documentStandard,
                        changeDocumentStatus,
                        timeout}, this.onEndreceiveDelegate, this.onreceiveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.receiveBinaryResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.receiveBinary(Edisoft.WebService.EdiWebService.receiveBinaryRequest request) {
            return base.Channel.receiveBinary(request);
        }
        
        public Edisoft.WebService.EdiWebService.ediFileData receiveBinary(string name, string password, string partnerILN, string documentType, string trackingId) {
            Edisoft.WebService.EdiWebService.receiveBinaryRequest inValue = new Edisoft.WebService.EdiWebService.receiveBinaryRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerILN = partnerILN;
            inValue.documentType = documentType;
            inValue.trackingId = trackingId;
            Edisoft.WebService.EdiWebService.receiveBinaryResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).receiveBinary(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginreceiveBinary(Edisoft.WebService.EdiWebService.receiveBinaryRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginreceiveBinary(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginreceiveBinary(string name, string password, string partnerILN, string documentType, string trackingId, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.receiveBinaryRequest inValue = new Edisoft.WebService.EdiWebService.receiveBinaryRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerILN = partnerILN;
            inValue.documentType = documentType;
            inValue.trackingId = trackingId;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginreceiveBinary(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.receiveBinaryResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndreceiveBinary(System.IAsyncResult result) {
            return base.Channel.EndreceiveBinary(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.ediFileData EndreceiveBinary(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.receiveBinaryResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndreceiveBinary(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginreceiveBinary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string partnerILN = ((string)(inValues[2]));
            string documentType = ((string)(inValues[3]));
            string trackingId = ((string)(inValues[4]));
            return this.BeginreceiveBinary(name, password, partnerILN, documentType, trackingId, callback, asyncState);
        }
        
        private object[] OnEndreceiveBinary(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.ediFileData retVal = this.EndreceiveBinary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnreceiveBinaryCompleted(object state) {
            if ((this.receiveBinaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.receiveBinaryCompleted(this, new receiveBinaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void receiveBinaryAsync(string name, string password, string partnerILN, string documentType, string trackingId) {
            this.receiveBinaryAsync(name, password, partnerILN, documentType, trackingId, null);
        }
        
        public void receiveBinaryAsync(string name, string password, string partnerILN, string documentType, string trackingId, object userState) {
            if ((this.onBeginreceiveBinaryDelegate == null)) {
                this.onBeginreceiveBinaryDelegate = new BeginOperationDelegate(this.OnBeginreceiveBinary);
            }
            if ((this.onEndreceiveBinaryDelegate == null)) {
                this.onEndreceiveBinaryDelegate = new EndOperationDelegate(this.OnEndreceiveBinary);
            }
            if ((this.onreceiveBinaryCompletedDelegate == null)) {
                this.onreceiveBinaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnreceiveBinaryCompleted);
            }
            base.InvokeAsync(this.onBeginreceiveBinaryDelegate, new object[] {
                        name,
                        password,
                        partnerILN,
                        documentType,
                        trackingId}, this.onEndreceiveBinaryDelegate, this.onreceiveBinaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.execSQLtoDocResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.execSQLtoDoc(Edisoft.WebService.EdiWebService.execSQLtoDocRequest request) {
            return base.Channel.execSQLtoDoc(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes execSQLtoDoc(string name, string password, string uid, string @params, string senderILN, string receiverILN, string docType) {
            Edisoft.WebService.EdiWebService.execSQLtoDocRequest inValue = new Edisoft.WebService.EdiWebService.execSQLtoDocRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.uid = uid;
            inValue.@params = @params;
            inValue.senderILN = senderILN;
            inValue.receiverILN = receiverILN;
            inValue.docType = docType;
            Edisoft.WebService.EdiWebService.execSQLtoDocResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).execSQLtoDoc(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginexecSQLtoDoc(Edisoft.WebService.EdiWebService.execSQLtoDocRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginexecSQLtoDoc(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginexecSQLtoDoc(string name, string password, string uid, string @params, string senderILN, string receiverILN, string docType, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.execSQLtoDocRequest inValue = new Edisoft.WebService.EdiWebService.execSQLtoDocRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.uid = uid;
            inValue.@params = @params;
            inValue.senderILN = senderILN;
            inValue.receiverILN = receiverILN;
            inValue.docType = docType;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginexecSQLtoDoc(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.execSQLtoDocResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndexecSQLtoDoc(System.IAsyncResult result) {
            return base.Channel.EndexecSQLtoDoc(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndexecSQLtoDoc(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.execSQLtoDocResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndexecSQLtoDoc(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginexecSQLtoDoc(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string uid = ((string)(inValues[2]));
            string @params = ((string)(inValues[3]));
            string senderILN = ((string)(inValues[4]));
            string receiverILN = ((string)(inValues[5]));
            string docType = ((string)(inValues[6]));
            return this.BeginexecSQLtoDoc(name, password, uid, @params, senderILN, receiverILN, docType, callback, asyncState);
        }
        
        private object[] OnEndexecSQLtoDoc(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndexecSQLtoDoc(result);
            return new object[] {
                    retVal};
        }
        
        private void OnexecSQLtoDocCompleted(object state) {
            if ((this.execSQLtoDocCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.execSQLtoDocCompleted(this, new execSQLtoDocCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void execSQLtoDocAsync(string name, string password, string uid, string @params, string senderILN, string receiverILN, string docType) {
            this.execSQLtoDocAsync(name, password, uid, @params, senderILN, receiverILN, docType, null);
        }
        
        public void execSQLtoDocAsync(string name, string password, string uid, string @params, string senderILN, string receiverILN, string docType, object userState) {
            if ((this.onBeginexecSQLtoDocDelegate == null)) {
                this.onBeginexecSQLtoDocDelegate = new BeginOperationDelegate(this.OnBeginexecSQLtoDoc);
            }
            if ((this.onEndexecSQLtoDocDelegate == null)) {
                this.onEndexecSQLtoDocDelegate = new EndOperationDelegate(this.OnEndexecSQLtoDoc);
            }
            if ((this.onexecSQLtoDocCompletedDelegate == null)) {
                this.onexecSQLtoDocCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnexecSQLtoDocCompleted);
            }
            base.InvokeAsync(this.onBeginexecSQLtoDocDelegate, new object[] {
                        name,
                        password,
                        uid,
                        @params,
                        senderILN,
                        receiverILN,
                        docType}, this.onEndexecSQLtoDocDelegate, this.onexecSQLtoDocCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.needUpdateResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.needUpdate(Edisoft.WebService.EdiWebService.needUpdateRequest request) {
            return base.Channel.needUpdate(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes needUpdate(string name, string password, int timeout) {
            Edisoft.WebService.EdiWebService.needUpdateRequest inValue = new Edisoft.WebService.EdiWebService.needUpdateRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.timeout = timeout;
            Edisoft.WebService.EdiWebService.needUpdateResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).needUpdate(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginneedUpdate(Edisoft.WebService.EdiWebService.needUpdateRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginneedUpdate(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginneedUpdate(string name, string password, int timeout, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.needUpdateRequest inValue = new Edisoft.WebService.EdiWebService.needUpdateRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.timeout = timeout;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginneedUpdate(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.needUpdateResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndneedUpdate(System.IAsyncResult result) {
            return base.Channel.EndneedUpdate(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndneedUpdate(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.needUpdateResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndneedUpdate(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginneedUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            int timeout = ((int)(inValues[2]));
            return this.BeginneedUpdate(name, password, timeout, callback, asyncState);
        }
        
        private object[] OnEndneedUpdate(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndneedUpdate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnneedUpdateCompleted(object state) {
            if ((this.needUpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.needUpdateCompleted(this, new needUpdateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void needUpdateAsync(string name, string password, int timeout) {
            this.needUpdateAsync(name, password, timeout, null);
        }
        
        public void needUpdateAsync(string name, string password, int timeout, object userState) {
            if ((this.onBeginneedUpdateDelegate == null)) {
                this.onBeginneedUpdateDelegate = new BeginOperationDelegate(this.OnBeginneedUpdate);
            }
            if ((this.onEndneedUpdateDelegate == null)) {
                this.onEndneedUpdateDelegate = new EndOperationDelegate(this.OnEndneedUpdate);
            }
            if ((this.onneedUpdateCompletedDelegate == null)) {
                this.onneedUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnneedUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginneedUpdateDelegate, new object[] {
                        name,
                        password,
                        timeout}, this.onEndneedUpdateDelegate, this.onneedUpdateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.sendPDAResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.sendPDA(Edisoft.WebService.EdiWebService.sendPDARequest request) {
            return base.Channel.sendPDA(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes sendPDA(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string controlNumber, string documentContent, int timeout, string creationType, string hardwareId) {
            Edisoft.WebService.EdiWebService.sendPDARequest inValue = new Edisoft.WebService.EdiWebService.sendPDARequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerILN = partnerILN;
            inValue.documentType = documentType;
            inValue.documentVersion = documentVersion;
            inValue.documentStandard = documentStandard;
            inValue.documentTest = documentTest;
            inValue.controlNumber = controlNumber;
            inValue.documentContent = documentContent;
            inValue.timeout = timeout;
            inValue.creationType = creationType;
            inValue.hardwareId = hardwareId;
            Edisoft.WebService.EdiWebService.sendPDAResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).sendPDA(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginsendPDA(Edisoft.WebService.EdiWebService.sendPDARequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginsendPDA(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginsendPDA(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string controlNumber, string documentContent, int timeout, string creationType, string hardwareId, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.sendPDARequest inValue = new Edisoft.WebService.EdiWebService.sendPDARequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerILN = partnerILN;
            inValue.documentType = documentType;
            inValue.documentVersion = documentVersion;
            inValue.documentStandard = documentStandard;
            inValue.documentTest = documentTest;
            inValue.controlNumber = controlNumber;
            inValue.documentContent = documentContent;
            inValue.timeout = timeout;
            inValue.creationType = creationType;
            inValue.hardwareId = hardwareId;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginsendPDA(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.sendPDAResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndsendPDA(System.IAsyncResult result) {
            return base.Channel.EndsendPDA(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndsendPDA(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.sendPDAResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndsendPDA(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginsendPDA(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string partnerILN = ((string)(inValues[2]));
            string documentType = ((string)(inValues[3]));
            string documentVersion = ((string)(inValues[4]));
            string documentStandard = ((string)(inValues[5]));
            string documentTest = ((string)(inValues[6]));
            string controlNumber = ((string)(inValues[7]));
            string documentContent = ((string)(inValues[8]));
            int timeout = ((int)(inValues[9]));
            string creationType = ((string)(inValues[10]));
            string hardwareId = ((string)(inValues[11]));
            return this.BeginsendPDA(name, password, partnerILN, documentType, documentVersion, documentStandard, documentTest, controlNumber, documentContent, timeout, creationType, hardwareId, callback, asyncState);
        }
        
        private object[] OnEndsendPDA(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndsendPDA(result);
            return new object[] {
                    retVal};
        }
        
        private void OnsendPDACompleted(object state) {
            if ((this.sendPDACompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.sendPDACompleted(this, new sendPDACompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void sendPDAAsync(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string controlNumber, string documentContent, int timeout, string creationType, string hardwareId) {
            this.sendPDAAsync(name, password, partnerILN, documentType, documentVersion, documentStandard, documentTest, controlNumber, documentContent, timeout, creationType, hardwareId, null);
        }
        
        public void sendPDAAsync(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string controlNumber, string documentContent, int timeout, string creationType, string hardwareId, object userState) {
            if ((this.onBeginsendPDADelegate == null)) {
                this.onBeginsendPDADelegate = new BeginOperationDelegate(this.OnBeginsendPDA);
            }
            if ((this.onEndsendPDADelegate == null)) {
                this.onEndsendPDADelegate = new EndOperationDelegate(this.OnEndsendPDA);
            }
            if ((this.onsendPDACompletedDelegate == null)) {
                this.onsendPDACompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsendPDACompleted);
            }
            base.InvokeAsync(this.onBeginsendPDADelegate, new object[] {
                        name,
                        password,
                        partnerILN,
                        documentType,
                        documentVersion,
                        documentStandard,
                        documentTest,
                        controlNumber,
                        documentContent,
                        timeout,
                        creationType,
                        hardwareId}, this.onEndsendPDADelegate, this.onsendPDACompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.sendBinaryResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.sendBinary(Edisoft.WebService.EdiWebService.sendBinaryRequest request) {
            return base.Channel.sendBinary(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes sendBinary(string name, string password, string partnerIln, string documentType, string fileName, byte[] data) {
            Edisoft.WebService.EdiWebService.sendBinaryRequest inValue = new Edisoft.WebService.EdiWebService.sendBinaryRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerIln = partnerIln;
            inValue.documentType = documentType;
            inValue.fileName = fileName;
            inValue.data = data;
            Edisoft.WebService.EdiWebService.sendBinaryResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).sendBinary(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginsendBinary(Edisoft.WebService.EdiWebService.sendBinaryRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginsendBinary(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginsendBinary(string name, string password, string partnerIln, string documentType, string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.sendBinaryRequest inValue = new Edisoft.WebService.EdiWebService.sendBinaryRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerIln = partnerIln;
            inValue.documentType = documentType;
            inValue.fileName = fileName;
            inValue.data = data;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginsendBinary(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.sendBinaryResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndsendBinary(System.IAsyncResult result) {
            return base.Channel.EndsendBinary(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndsendBinary(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.sendBinaryResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndsendBinary(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginsendBinary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string partnerIln = ((string)(inValues[2]));
            string documentType = ((string)(inValues[3]));
            string fileName = ((string)(inValues[4]));
            byte[] data = ((byte[])(inValues[5]));
            return this.BeginsendBinary(name, password, partnerIln, documentType, fileName, data, callback, asyncState);
        }
        
        private object[] OnEndsendBinary(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndsendBinary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnsendBinaryCompleted(object state) {
            if ((this.sendBinaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.sendBinaryCompleted(this, new sendBinaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void sendBinaryAsync(string name, string password, string partnerIln, string documentType, string fileName, byte[] data) {
            this.sendBinaryAsync(name, password, partnerIln, documentType, fileName, data, null);
        }
        
        public void sendBinaryAsync(string name, string password, string partnerIln, string documentType, string fileName, byte[] data, object userState) {
            if ((this.onBeginsendBinaryDelegate == null)) {
                this.onBeginsendBinaryDelegate = new BeginOperationDelegate(this.OnBeginsendBinary);
            }
            if ((this.onEndsendBinaryDelegate == null)) {
                this.onEndsendBinaryDelegate = new EndOperationDelegate(this.OnEndsendBinary);
            }
            if ((this.onsendBinaryCompletedDelegate == null)) {
                this.onsendBinaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsendBinaryCompleted);
            }
            base.InvokeAsync(this.onBeginsendBinaryDelegate, new object[] {
                        name,
                        password,
                        partnerIln,
                        documentType,
                        fileName,
                        data}, this.onEndsendBinaryDelegate, this.onsendBinaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.changeDocumentStatusResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.changeDocumentStatus(Edisoft.WebService.EdiWebService.changeDocumentStatusRequest request) {
            return base.Channel.changeDocumentStatus(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes changeDocumentStatus(string name, string password, string trackingId, string status) {
            Edisoft.WebService.EdiWebService.changeDocumentStatusRequest inValue = new Edisoft.WebService.EdiWebService.changeDocumentStatusRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.trackingId = trackingId;
            inValue.status = status;
            Edisoft.WebService.EdiWebService.changeDocumentStatusResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).changeDocumentStatus(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginchangeDocumentStatus(Edisoft.WebService.EdiWebService.changeDocumentStatusRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginchangeDocumentStatus(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginchangeDocumentStatus(string name, string password, string trackingId, string status, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.changeDocumentStatusRequest inValue = new Edisoft.WebService.EdiWebService.changeDocumentStatusRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.trackingId = trackingId;
            inValue.status = status;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginchangeDocumentStatus(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.changeDocumentStatusResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndchangeDocumentStatus(System.IAsyncResult result) {
            return base.Channel.EndchangeDocumentStatus(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndchangeDocumentStatus(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.changeDocumentStatusResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndchangeDocumentStatus(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginchangeDocumentStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string trackingId = ((string)(inValues[2]));
            string status = ((string)(inValues[3]));
            return this.BeginchangeDocumentStatus(name, password, trackingId, status, callback, asyncState);
        }
        
        private object[] OnEndchangeDocumentStatus(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndchangeDocumentStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnchangeDocumentStatusCompleted(object state) {
            if ((this.changeDocumentStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.changeDocumentStatusCompleted(this, new changeDocumentStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void changeDocumentStatusAsync(string name, string password, string trackingId, string status) {
            this.changeDocumentStatusAsync(name, password, trackingId, status, null);
        }
        
        public void changeDocumentStatusAsync(string name, string password, string trackingId, string status, object userState) {
            if ((this.onBeginchangeDocumentStatusDelegate == null)) {
                this.onBeginchangeDocumentStatusDelegate = new BeginOperationDelegate(this.OnBeginchangeDocumentStatus);
            }
            if ((this.onEndchangeDocumentStatusDelegate == null)) {
                this.onEndchangeDocumentStatusDelegate = new EndOperationDelegate(this.OnEndchangeDocumentStatus);
            }
            if ((this.onchangeDocumentStatusCompletedDelegate == null)) {
                this.onchangeDocumentStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnchangeDocumentStatusCompleted);
            }
            base.InvokeAsync(this.onBeginchangeDocumentStatusDelegate, new object[] {
                        name,
                        password,
                        trackingId,
                        status}, this.onEndchangeDocumentStatusDelegate, this.onchangeDocumentStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.receivePDAResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.receivePDA(Edisoft.WebService.EdiWebService.receivePDARequest request) {
            return base.Channel.receivePDA(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes receivePDA(string name, string password, string partnerILN, string documentType, string trackingId, string documentStandard, string changeDocumentStatus, int timeout, string hardwareId, System.DateTime lastUpdateDateTime) {
            Edisoft.WebService.EdiWebService.receivePDARequest inValue = new Edisoft.WebService.EdiWebService.receivePDARequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerILN = partnerILN;
            inValue.documentType = documentType;
            inValue.trackingId = trackingId;
            inValue.documentStandard = documentStandard;
            inValue.changeDocumentStatus = changeDocumentStatus;
            inValue.timeout = timeout;
            inValue.hardwareId = hardwareId;
            inValue.lastUpdateDateTime = lastUpdateDateTime;
            Edisoft.WebService.EdiWebService.receivePDAResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).receivePDA(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginreceivePDA(Edisoft.WebService.EdiWebService.receivePDARequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginreceivePDA(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginreceivePDA(string name, string password, string partnerILN, string documentType, string trackingId, string documentStandard, string changeDocumentStatus, int timeout, string hardwareId, System.DateTime lastUpdateDateTime, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.receivePDARequest inValue = new Edisoft.WebService.EdiWebService.receivePDARequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerILN = partnerILN;
            inValue.documentType = documentType;
            inValue.trackingId = trackingId;
            inValue.documentStandard = documentStandard;
            inValue.changeDocumentStatus = changeDocumentStatus;
            inValue.timeout = timeout;
            inValue.hardwareId = hardwareId;
            inValue.lastUpdateDateTime = lastUpdateDateTime;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginreceivePDA(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.receivePDAResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndreceivePDA(System.IAsyncResult result) {
            return base.Channel.EndreceivePDA(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndreceivePDA(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.receivePDAResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndreceivePDA(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginreceivePDA(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string partnerILN = ((string)(inValues[2]));
            string documentType = ((string)(inValues[3]));
            string trackingId = ((string)(inValues[4]));
            string documentStandard = ((string)(inValues[5]));
            string changeDocumentStatus = ((string)(inValues[6]));
            int timeout = ((int)(inValues[7]));
            string hardwareId = ((string)(inValues[8]));
            System.DateTime lastUpdateDateTime = ((System.DateTime)(inValues[9]));
            return this.BeginreceivePDA(name, password, partnerILN, documentType, trackingId, documentStandard, changeDocumentStatus, timeout, hardwareId, lastUpdateDateTime, callback, asyncState);
        }
        
        private object[] OnEndreceivePDA(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndreceivePDA(result);
            return new object[] {
                    retVal};
        }
        
        private void OnreceivePDACompleted(object state) {
            if ((this.receivePDACompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.receivePDACompleted(this, new receivePDACompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void receivePDAAsync(string name, string password, string partnerILN, string documentType, string trackingId, string documentStandard, string changeDocumentStatus, int timeout, string hardwareId, System.DateTime lastUpdateDateTime) {
            this.receivePDAAsync(name, password, partnerILN, documentType, trackingId, documentStandard, changeDocumentStatus, timeout, hardwareId, lastUpdateDateTime, null);
        }
        
        public void receivePDAAsync(string name, string password, string partnerILN, string documentType, string trackingId, string documentStandard, string changeDocumentStatus, int timeout, string hardwareId, System.DateTime lastUpdateDateTime, object userState) {
            if ((this.onBeginreceivePDADelegate == null)) {
                this.onBeginreceivePDADelegate = new BeginOperationDelegate(this.OnBeginreceivePDA);
            }
            if ((this.onEndreceivePDADelegate == null)) {
                this.onEndreceivePDADelegate = new EndOperationDelegate(this.OnEndreceivePDA);
            }
            if ((this.onreceivePDACompletedDelegate == null)) {
                this.onreceivePDACompletedDelegate = new System.Threading.SendOrPostCallback(this.OnreceivePDACompleted);
            }
            base.InvokeAsync(this.onBeginreceivePDADelegate, new object[] {
                        name,
                        password,
                        partnerILN,
                        documentType,
                        trackingId,
                        documentStandard,
                        changeDocumentStatus,
                        timeout,
                        hardwareId,
                        lastUpdateDateTime}, this.onEndreceivePDADelegate, this.onreceivePDACompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listPBResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.listPB(Edisoft.WebService.EdiWebService.listPBRequest request) {
            return base.Channel.listPB(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes listPB(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string dateFrom, string dateTo, string itemFrom, string itemTo, int timeout) {
            Edisoft.WebService.EdiWebService.listPBRequest inValue = new Edisoft.WebService.EdiWebService.listPBRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerILN = partnerILN;
            inValue.documentType = documentType;
            inValue.documentVersion = documentVersion;
            inValue.documentStandard = documentStandard;
            inValue.documentTest = documentTest;
            inValue.dateFrom = dateFrom;
            inValue.dateTo = dateTo;
            inValue.itemFrom = itemFrom;
            inValue.itemTo = itemTo;
            inValue.timeout = timeout;
            Edisoft.WebService.EdiWebService.listPBResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).listPB(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginlistPB(Edisoft.WebService.EdiWebService.listPBRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginlistPB(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginlistPB(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string dateFrom, string dateTo, string itemFrom, string itemTo, int timeout, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.listPBRequest inValue = new Edisoft.WebService.EdiWebService.listPBRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerILN = partnerILN;
            inValue.documentType = documentType;
            inValue.documentVersion = documentVersion;
            inValue.documentStandard = documentStandard;
            inValue.documentTest = documentTest;
            inValue.dateFrom = dateFrom;
            inValue.dateTo = dateTo;
            inValue.itemFrom = itemFrom;
            inValue.itemTo = itemTo;
            inValue.timeout = timeout;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginlistPB(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listPBResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndlistPB(System.IAsyncResult result) {
            return base.Channel.EndlistPB(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndlistPB(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.listPBResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndlistPB(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginlistPB(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string partnerILN = ((string)(inValues[2]));
            string documentType = ((string)(inValues[3]));
            string documentVersion = ((string)(inValues[4]));
            string documentStandard = ((string)(inValues[5]));
            string documentTest = ((string)(inValues[6]));
            string dateFrom = ((string)(inValues[7]));
            string dateTo = ((string)(inValues[8]));
            string itemFrom = ((string)(inValues[9]));
            string itemTo = ((string)(inValues[10]));
            int timeout = ((int)(inValues[11]));
            return this.BeginlistPB(name, password, partnerILN, documentType, documentVersion, documentStandard, documentTest, dateFrom, dateTo, itemFrom, itemTo, timeout, callback, asyncState);
        }
        
        private object[] OnEndlistPB(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndlistPB(result);
            return new object[] {
                    retVal};
        }
        
        private void OnlistPBCompleted(object state) {
            if ((this.listPBCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.listPBCompleted(this, new listPBCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void listPBAsync(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string dateFrom, string dateTo, string itemFrom, string itemTo, int timeout) {
            this.listPBAsync(name, password, partnerILN, documentType, documentVersion, documentStandard, documentTest, dateFrom, dateTo, itemFrom, itemTo, timeout, null);
        }
        
        public void listPBAsync(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string dateFrom, string dateTo, string itemFrom, string itemTo, int timeout, object userState) {
            if ((this.onBeginlistPBDelegate == null)) {
                this.onBeginlistPBDelegate = new BeginOperationDelegate(this.OnBeginlistPB);
            }
            if ((this.onEndlistPBDelegate == null)) {
                this.onEndlistPBDelegate = new EndOperationDelegate(this.OnEndlistPB);
            }
            if ((this.onlistPBCompletedDelegate == null)) {
                this.onlistPBCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnlistPBCompleted);
            }
            base.InvokeAsync(this.onBeginlistPBDelegate, new object[] {
                        name,
                        password,
                        partnerILN,
                        documentType,
                        documentVersion,
                        documentStandard,
                        documentTest,
                        dateFrom,
                        dateTo,
                        itemFrom,
                        itemTo,
                        timeout}, this.onEndlistPBDelegate, this.onlistPBCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.importDocumentResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.importDocument(Edisoft.WebService.EdiWebService.importDocumentRequest request) {
            return base.Channel.importDocument(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes importDocument(string systemLogin, string systemPassword, string userLogin, string userPassword, string partnerILN, string documentType, string documentGuid, string documentCreationDate, string documentContent) {
            Edisoft.WebService.EdiWebService.importDocumentRequest inValue = new Edisoft.WebService.EdiWebService.importDocumentRequest();
            inValue.systemLogin = systemLogin;
            inValue.systemPassword = systemPassword;
            inValue.userLogin = userLogin;
            inValue.userPassword = userPassword;
            inValue.partnerILN = partnerILN;
            inValue.documentType = documentType;
            inValue.documentGuid = documentGuid;
            inValue.documentCreationDate = documentCreationDate;
            inValue.documentContent = documentContent;
            Edisoft.WebService.EdiWebService.importDocumentResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).importDocument(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginimportDocument(Edisoft.WebService.EdiWebService.importDocumentRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginimportDocument(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginimportDocument(string systemLogin, string systemPassword, string userLogin, string userPassword, string partnerILN, string documentType, string documentGuid, string documentCreationDate, string documentContent, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.importDocumentRequest inValue = new Edisoft.WebService.EdiWebService.importDocumentRequest();
            inValue.systemLogin = systemLogin;
            inValue.systemPassword = systemPassword;
            inValue.userLogin = userLogin;
            inValue.userPassword = userPassword;
            inValue.partnerILN = partnerILN;
            inValue.documentType = documentType;
            inValue.documentGuid = documentGuid;
            inValue.documentCreationDate = documentCreationDate;
            inValue.documentContent = documentContent;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginimportDocument(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.importDocumentResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndimportDocument(System.IAsyncResult result) {
            return base.Channel.EndimportDocument(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndimportDocument(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.importDocumentResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndimportDocument(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginimportDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string systemLogin = ((string)(inValues[0]));
            string systemPassword = ((string)(inValues[1]));
            string userLogin = ((string)(inValues[2]));
            string userPassword = ((string)(inValues[3]));
            string partnerILN = ((string)(inValues[4]));
            string documentType = ((string)(inValues[5]));
            string documentGuid = ((string)(inValues[6]));
            string documentCreationDate = ((string)(inValues[7]));
            string documentContent = ((string)(inValues[8]));
            return this.BeginimportDocument(systemLogin, systemPassword, userLogin, userPassword, partnerILN, documentType, documentGuid, documentCreationDate, documentContent, callback, asyncState);
        }
        
        private object[] OnEndimportDocument(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndimportDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OnimportDocumentCompleted(object state) {
            if ((this.importDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.importDocumentCompleted(this, new importDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void importDocumentAsync(string systemLogin, string systemPassword, string userLogin, string userPassword, string partnerILN, string documentType, string documentGuid, string documentCreationDate, string documentContent) {
            this.importDocumentAsync(systemLogin, systemPassword, userLogin, userPassword, partnerILN, documentType, documentGuid, documentCreationDate, documentContent, null);
        }
        
        public void importDocumentAsync(string systemLogin, string systemPassword, string userLogin, string userPassword, string partnerILN, string documentType, string documentGuid, string documentCreationDate, string documentContent, object userState) {
            if ((this.onBeginimportDocumentDelegate == null)) {
                this.onBeginimportDocumentDelegate = new BeginOperationDelegate(this.OnBeginimportDocument);
            }
            if ((this.onEndimportDocumentDelegate == null)) {
                this.onEndimportDocumentDelegate = new EndOperationDelegate(this.OnEndimportDocument);
            }
            if ((this.onimportDocumentCompletedDelegate == null)) {
                this.onimportDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnimportDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginimportDocumentDelegate, new object[] {
                        systemLogin,
                        systemPassword,
                        userLogin,
                        userPassword,
                        partnerILN,
                        documentType,
                        documentGuid,
                        documentCreationDate,
                        documentContent}, this.onEndimportDocumentDelegate, this.onimportDocumentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listPBExResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.listPBEx(Edisoft.WebService.EdiWebService.listPBExRequest request) {
            return base.Channel.listPBEx(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes listPBEx(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string dateFrom, string dateTo, string itemFrom, string itemTo, string orderBy, int timeout) {
            Edisoft.WebService.EdiWebService.listPBExRequest inValue = new Edisoft.WebService.EdiWebService.listPBExRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerILN = partnerILN;
            inValue.documentType = documentType;
            inValue.documentVersion = documentVersion;
            inValue.documentStandard = documentStandard;
            inValue.documentTest = documentTest;
            inValue.dateFrom = dateFrom;
            inValue.dateTo = dateTo;
            inValue.itemFrom = itemFrom;
            inValue.itemTo = itemTo;
            inValue.orderBy = orderBy;
            inValue.timeout = timeout;
            Edisoft.WebService.EdiWebService.listPBExResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).listPBEx(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginlistPBEx(Edisoft.WebService.EdiWebService.listPBExRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginlistPBEx(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginlistPBEx(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string dateFrom, string dateTo, string itemFrom, string itemTo, string orderBy, int timeout, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.listPBExRequest inValue = new Edisoft.WebService.EdiWebService.listPBExRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerILN = partnerILN;
            inValue.documentType = documentType;
            inValue.documentVersion = documentVersion;
            inValue.documentStandard = documentStandard;
            inValue.documentTest = documentTest;
            inValue.dateFrom = dateFrom;
            inValue.dateTo = dateTo;
            inValue.itemFrom = itemFrom;
            inValue.itemTo = itemTo;
            inValue.orderBy = orderBy;
            inValue.timeout = timeout;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginlistPBEx(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listPBExResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndlistPBEx(System.IAsyncResult result) {
            return base.Channel.EndlistPBEx(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndlistPBEx(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.listPBExResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndlistPBEx(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginlistPBEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string partnerILN = ((string)(inValues[2]));
            string documentType = ((string)(inValues[3]));
            string documentVersion = ((string)(inValues[4]));
            string documentStandard = ((string)(inValues[5]));
            string documentTest = ((string)(inValues[6]));
            string dateFrom = ((string)(inValues[7]));
            string dateTo = ((string)(inValues[8]));
            string itemFrom = ((string)(inValues[9]));
            string itemTo = ((string)(inValues[10]));
            string orderBy = ((string)(inValues[11]));
            int timeout = ((int)(inValues[12]));
            return this.BeginlistPBEx(name, password, partnerILN, documentType, documentVersion, documentStandard, documentTest, dateFrom, dateTo, itemFrom, itemTo, orderBy, timeout, callback, asyncState);
        }
        
        private object[] OnEndlistPBEx(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndlistPBEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnlistPBExCompleted(object state) {
            if ((this.listPBExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.listPBExCompleted(this, new listPBExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void listPBExAsync(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string dateFrom, string dateTo, string itemFrom, string itemTo, string orderBy, int timeout) {
            this.listPBExAsync(name, password, partnerILN, documentType, documentVersion, documentStandard, documentTest, dateFrom, dateTo, itemFrom, itemTo, orderBy, timeout, null);
        }
        
        public void listPBExAsync(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string dateFrom, string dateTo, string itemFrom, string itemTo, string orderBy, int timeout, object userState) {
            if ((this.onBeginlistPBExDelegate == null)) {
                this.onBeginlistPBExDelegate = new BeginOperationDelegate(this.OnBeginlistPBEx);
            }
            if ((this.onEndlistPBExDelegate == null)) {
                this.onEndlistPBExDelegate = new EndOperationDelegate(this.OnEndlistPBEx);
            }
            if ((this.onlistPBExCompletedDelegate == null)) {
                this.onlistPBExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnlistPBExCompleted);
            }
            base.InvokeAsync(this.onBeginlistPBExDelegate, new object[] {
                        name,
                        password,
                        partnerILN,
                        documentType,
                        documentVersion,
                        documentStandard,
                        documentTest,
                        dateFrom,
                        dateTo,
                        itemFrom,
                        itemTo,
                        orderBy,
                        timeout}, this.onEndlistPBExDelegate, this.onlistPBExCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listPBExAllResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.listPBExAll(Edisoft.WebService.EdiWebService.listPBExAllRequest request) {
            return base.Channel.listPBExAll(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes listPBExAll(string name, string password) {
            Edisoft.WebService.EdiWebService.listPBExAllRequest inValue = new Edisoft.WebService.EdiWebService.listPBExAllRequest();
            inValue.name = name;
            inValue.password = password;
            Edisoft.WebService.EdiWebService.listPBExAllResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).listPBExAll(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginlistPBExAll(Edisoft.WebService.EdiWebService.listPBExAllRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginlistPBExAll(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginlistPBExAll(string name, string password, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.listPBExAllRequest inValue = new Edisoft.WebService.EdiWebService.listPBExAllRequest();
            inValue.name = name;
            inValue.password = password;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginlistPBExAll(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listPBExAllResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndlistPBExAll(System.IAsyncResult result) {
            return base.Channel.EndlistPBExAll(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndlistPBExAll(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.listPBExAllResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndlistPBExAll(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginlistPBExAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return this.BeginlistPBExAll(name, password, callback, asyncState);
        }
        
        private object[] OnEndlistPBExAll(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndlistPBExAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnlistPBExAllCompleted(object state) {
            if ((this.listPBExAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.listPBExAllCompleted(this, new listPBExAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void listPBExAllAsync(string name, string password) {
            this.listPBExAllAsync(name, password, null);
        }
        
        public void listPBExAllAsync(string name, string password, object userState) {
            if ((this.onBeginlistPBExAllDelegate == null)) {
                this.onBeginlistPBExAllDelegate = new BeginOperationDelegate(this.OnBeginlistPBExAll);
            }
            if ((this.onEndlistPBExAllDelegate == null)) {
                this.onEndlistPBExAllDelegate = new EndOperationDelegate(this.OnEndlistPBExAll);
            }
            if ((this.onlistPBExAllCompletedDelegate == null)) {
                this.onlistPBExAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnlistPBExAllCompleted);
            }
            base.InvokeAsync(this.onBeginlistPBExAllDelegate, new object[] {
                        name,
                        password}, this.onEndlistPBExAllDelegate, this.onlistPBExAllCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listMBResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.listMB(Edisoft.WebService.EdiWebService.listMBRequest request) {
            return base.Channel.listMB(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes listMB(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string documentStatus, int timeout) {
            Edisoft.WebService.EdiWebService.listMBRequest inValue = new Edisoft.WebService.EdiWebService.listMBRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerILN = partnerILN;
            inValue.documentType = documentType;
            inValue.documentVersion = documentVersion;
            inValue.documentStandard = documentStandard;
            inValue.documentTest = documentTest;
            inValue.documentStatus = documentStatus;
            inValue.timeout = timeout;
            Edisoft.WebService.EdiWebService.listMBResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).listMB(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginlistMB(Edisoft.WebService.EdiWebService.listMBRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginlistMB(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginlistMB(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string documentStatus, int timeout, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.listMBRequest inValue = new Edisoft.WebService.EdiWebService.listMBRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerILN = partnerILN;
            inValue.documentType = documentType;
            inValue.documentVersion = documentVersion;
            inValue.documentStandard = documentStandard;
            inValue.documentTest = documentTest;
            inValue.documentStatus = documentStatus;
            inValue.timeout = timeout;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginlistMB(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listMBResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndlistMB(System.IAsyncResult result) {
            return base.Channel.EndlistMB(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndlistMB(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.listMBResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndlistMB(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginlistMB(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string partnerILN = ((string)(inValues[2]));
            string documentType = ((string)(inValues[3]));
            string documentVersion = ((string)(inValues[4]));
            string documentStandard = ((string)(inValues[5]));
            string documentTest = ((string)(inValues[6]));
            string documentStatus = ((string)(inValues[7]));
            int timeout = ((int)(inValues[8]));
            return this.BeginlistMB(name, password, partnerILN, documentType, documentVersion, documentStandard, documentTest, documentStatus, timeout, callback, asyncState);
        }
        
        private object[] OnEndlistMB(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndlistMB(result);
            return new object[] {
                    retVal};
        }
        
        private void OnlistMBCompleted(object state) {
            if ((this.listMBCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.listMBCompleted(this, new listMBCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void listMBAsync(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string documentStatus, int timeout) {
            this.listMBAsync(name, password, partnerILN, documentType, documentVersion, documentStandard, documentTest, documentStatus, timeout, null);
        }
        
        public void listMBAsync(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string documentStatus, int timeout, object userState) {
            if ((this.onBeginlistMBDelegate == null)) {
                this.onBeginlistMBDelegate = new BeginOperationDelegate(this.OnBeginlistMB);
            }
            if ((this.onEndlistMBDelegate == null)) {
                this.onEndlistMBDelegate = new EndOperationDelegate(this.OnEndlistMB);
            }
            if ((this.onlistMBCompletedDelegate == null)) {
                this.onlistMBCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnlistMBCompleted);
            }
            base.InvokeAsync(this.onBeginlistMBDelegate, new object[] {
                        name,
                        password,
                        partnerILN,
                        documentType,
                        documentVersion,
                        documentStandard,
                        documentTest,
                        documentStatus,
                        timeout}, this.onEndlistMBDelegate, this.onlistMBCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listMBAllResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.listMBAll(Edisoft.WebService.EdiWebService.listMBAllRequest request) {
            return base.Channel.listMBAll(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes listMBAll(string name, string password, bool receiveBinary) {
            Edisoft.WebService.EdiWebService.listMBAllRequest inValue = new Edisoft.WebService.EdiWebService.listMBAllRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.receiveBinary = receiveBinary;
            Edisoft.WebService.EdiWebService.listMBAllResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).listMBAll(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginlistMBAll(Edisoft.WebService.EdiWebService.listMBAllRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginlistMBAll(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginlistMBAll(string name, string password, bool receiveBinary, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.listMBAllRequest inValue = new Edisoft.WebService.EdiWebService.listMBAllRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.receiveBinary = receiveBinary;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginlistMBAll(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listMBAllResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndlistMBAll(System.IAsyncResult result) {
            return base.Channel.EndlistMBAll(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndlistMBAll(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.listMBAllResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndlistMBAll(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginlistMBAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            bool receiveBinary = ((bool)(inValues[2]));
            return this.BeginlistMBAll(name, password, receiveBinary, callback, asyncState);
        }
        
        private object[] OnEndlistMBAll(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndlistMBAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnlistMBAllCompleted(object state) {
            if ((this.listMBAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.listMBAllCompleted(this, new listMBAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void listMBAllAsync(string name, string password, bool receiveBinary) {
            this.listMBAllAsync(name, password, receiveBinary, null);
        }
        
        public void listMBAllAsync(string name, string password, bool receiveBinary, object userState) {
            if ((this.onBeginlistMBAllDelegate == null)) {
                this.onBeginlistMBAllDelegate = new BeginOperationDelegate(this.OnBeginlistMBAll);
            }
            if ((this.onEndlistMBAllDelegate == null)) {
                this.onEndlistMBAllDelegate = new EndOperationDelegate(this.OnEndlistMBAll);
            }
            if ((this.onlistMBAllCompletedDelegate == null)) {
                this.onlistMBAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnlistMBAllCompleted);
            }
            base.InvokeAsync(this.onBeginlistMBAllDelegate, new object[] {
                        name,
                        password,
                        receiveBinary}, this.onEndlistMBAllDelegate, this.onlistMBAllCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listMBAllExResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.listMBAllEx(Edisoft.WebService.EdiWebService.listMBAllExRequest request) {
            return base.Channel.listMBAllEx(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes listMBAllEx(string name, string password, bool receiveBinary) {
            Edisoft.WebService.EdiWebService.listMBAllExRequest inValue = new Edisoft.WebService.EdiWebService.listMBAllExRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.receiveBinary = receiveBinary;
            Edisoft.WebService.EdiWebService.listMBAllExResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).listMBAllEx(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginlistMBAllEx(Edisoft.WebService.EdiWebService.listMBAllExRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginlistMBAllEx(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginlistMBAllEx(string name, string password, bool receiveBinary, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.listMBAllExRequest inValue = new Edisoft.WebService.EdiWebService.listMBAllExRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.receiveBinary = receiveBinary;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginlistMBAllEx(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listMBAllExResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndlistMBAllEx(System.IAsyncResult result) {
            return base.Channel.EndlistMBAllEx(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndlistMBAllEx(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.listMBAllExResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndlistMBAllEx(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginlistMBAllEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            bool receiveBinary = ((bool)(inValues[2]));
            return this.BeginlistMBAllEx(name, password, receiveBinary, callback, asyncState);
        }
        
        private object[] OnEndlistMBAllEx(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndlistMBAllEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnlistMBAllExCompleted(object state) {
            if ((this.listMBAllExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.listMBAllExCompleted(this, new listMBAllExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void listMBAllExAsync(string name, string password, bool receiveBinary) {
            this.listMBAllExAsync(name, password, receiveBinary, null);
        }
        
        public void listMBAllExAsync(string name, string password, bool receiveBinary, object userState) {
            if ((this.onBeginlistMBAllExDelegate == null)) {
                this.onBeginlistMBAllExDelegate = new BeginOperationDelegate(this.OnBeginlistMBAllEx);
            }
            if ((this.onEndlistMBAllExDelegate == null)) {
                this.onEndlistMBAllExDelegate = new EndOperationDelegate(this.OnEndlistMBAllEx);
            }
            if ((this.onlistMBAllExCompletedDelegate == null)) {
                this.onlistMBAllExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnlistMBAllExCompleted);
            }
            base.InvokeAsync(this.onBeginlistMBAllExDelegate, new object[] {
                        name,
                        password,
                        receiveBinary}, this.onEndlistMBAllExDelegate, this.onlistMBAllExCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listMBAllExXMLResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.listMBAllExXML(Edisoft.WebService.EdiWebService.listMBAllExXMLRequest request) {
            return base.Channel.listMBAllExXML(request);
        }
        
        public Edisoft.WebService.EdiWebService.listMBAllExModel listMBAllExXML(string name, string password, bool receiveBinary, System.DateTime lastDate, System.DateTime endDate, string uuid, string direction, string status, int timeout) {
            Edisoft.WebService.EdiWebService.listMBAllExXMLRequest inValue = new Edisoft.WebService.EdiWebService.listMBAllExXMLRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.receiveBinary = receiveBinary;
            inValue.lastDate = lastDate;
            inValue.endDate = endDate;
            inValue.uuid = uuid;
            inValue.direction = direction;
            inValue.status = status;
            inValue.timeout = timeout;
            Edisoft.WebService.EdiWebService.listMBAllExXMLResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).listMBAllExXML(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginlistMBAllExXML(Edisoft.WebService.EdiWebService.listMBAllExXMLRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginlistMBAllExXML(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginlistMBAllExXML(string name, string password, bool receiveBinary, System.DateTime lastDate, System.DateTime endDate, string uuid, string direction, string status, int timeout, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.listMBAllExXMLRequest inValue = new Edisoft.WebService.EdiWebService.listMBAllExXMLRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.receiveBinary = receiveBinary;
            inValue.lastDate = lastDate;
            inValue.endDate = endDate;
            inValue.uuid = uuid;
            inValue.direction = direction;
            inValue.status = status;
            inValue.timeout = timeout;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginlistMBAllExXML(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listMBAllExXMLResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndlistMBAllExXML(System.IAsyncResult result) {
            return base.Channel.EndlistMBAllExXML(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.listMBAllExModel EndlistMBAllExXML(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.listMBAllExXMLResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndlistMBAllExXML(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginlistMBAllExXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            bool receiveBinary = ((bool)(inValues[2]));
            System.DateTime lastDate = ((System.DateTime)(inValues[3]));
            System.DateTime endDate = ((System.DateTime)(inValues[4]));
            string uuid = ((string)(inValues[5]));
            string direction = ((string)(inValues[6]));
            string status = ((string)(inValues[7]));
            int timeout = ((int)(inValues[8]));
            return this.BeginlistMBAllExXML(name, password, receiveBinary, lastDate, endDate, uuid, direction, status, timeout, callback, asyncState);
        }
        
        private object[] OnEndlistMBAllExXML(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.listMBAllExModel retVal = this.EndlistMBAllExXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnlistMBAllExXMLCompleted(object state) {
            if ((this.listMBAllExXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.listMBAllExXMLCompleted(this, new listMBAllExXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void listMBAllExXMLAsync(string name, string password, bool receiveBinary, System.DateTime lastDate, System.DateTime endDate, string uuid, string direction, string status, int timeout) {
            this.listMBAllExXMLAsync(name, password, receiveBinary, lastDate, endDate, uuid, direction, status, timeout, null);
        }
        
        public void listMBAllExXMLAsync(string name, string password, bool receiveBinary, System.DateTime lastDate, System.DateTime endDate, string uuid, string direction, string status, int timeout, object userState) {
            if ((this.onBeginlistMBAllExXMLDelegate == null)) {
                this.onBeginlistMBAllExXMLDelegate = new BeginOperationDelegate(this.OnBeginlistMBAllExXML);
            }
            if ((this.onEndlistMBAllExXMLDelegate == null)) {
                this.onEndlistMBAllExXMLDelegate = new EndOperationDelegate(this.OnEndlistMBAllExXML);
            }
            if ((this.onlistMBAllExXMLCompletedDelegate == null)) {
                this.onlistMBAllExXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnlistMBAllExXMLCompleted);
            }
            base.InvokeAsync(this.onBeginlistMBAllExXMLDelegate, new object[] {
                        name,
                        password,
                        receiveBinary,
                        lastDate,
                        endDate,
                        uuid,
                        direction,
                        status,
                        timeout}, this.onEndlistMBAllExXMLDelegate, this.onlistMBAllExXMLCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listMBExResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.listMBEx(Edisoft.WebService.EdiWebService.listMBExRequest request) {
            return base.Channel.listMBEx(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes listMBEx(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string dateFrom, string dateTo, string itemFrom, string itemTo, string documentStatus, int timeout) {
            Edisoft.WebService.EdiWebService.listMBExRequest inValue = new Edisoft.WebService.EdiWebService.listMBExRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerILN = partnerILN;
            inValue.documentType = documentType;
            inValue.documentVersion = documentVersion;
            inValue.documentStandard = documentStandard;
            inValue.documentTest = documentTest;
            inValue.dateFrom = dateFrom;
            inValue.dateTo = dateTo;
            inValue.itemFrom = itemFrom;
            inValue.itemTo = itemTo;
            inValue.documentStatus = documentStatus;
            inValue.timeout = timeout;
            Edisoft.WebService.EdiWebService.listMBExResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).listMBEx(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginlistMBEx(Edisoft.WebService.EdiWebService.listMBExRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginlistMBEx(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginlistMBEx(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string dateFrom, string dateTo, string itemFrom, string itemTo, string documentStatus, int timeout, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.listMBExRequest inValue = new Edisoft.WebService.EdiWebService.listMBExRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerILN = partnerILN;
            inValue.documentType = documentType;
            inValue.documentVersion = documentVersion;
            inValue.documentStandard = documentStandard;
            inValue.documentTest = documentTest;
            inValue.dateFrom = dateFrom;
            inValue.dateTo = dateTo;
            inValue.itemFrom = itemFrom;
            inValue.itemTo = itemTo;
            inValue.documentStatus = documentStatus;
            inValue.timeout = timeout;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginlistMBEx(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listMBExResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndlistMBEx(System.IAsyncResult result) {
            return base.Channel.EndlistMBEx(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndlistMBEx(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.listMBExResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndlistMBEx(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginlistMBEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string partnerILN = ((string)(inValues[2]));
            string documentType = ((string)(inValues[3]));
            string documentVersion = ((string)(inValues[4]));
            string documentStandard = ((string)(inValues[5]));
            string documentTest = ((string)(inValues[6]));
            string dateFrom = ((string)(inValues[7]));
            string dateTo = ((string)(inValues[8]));
            string itemFrom = ((string)(inValues[9]));
            string itemTo = ((string)(inValues[10]));
            string documentStatus = ((string)(inValues[11]));
            int timeout = ((int)(inValues[12]));
            return this.BeginlistMBEx(name, password, partnerILN, documentType, documentVersion, documentStandard, documentTest, dateFrom, dateTo, itemFrom, itemTo, documentStatus, timeout, callback, asyncState);
        }
        
        private object[] OnEndlistMBEx(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndlistMBEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnlistMBExCompleted(object state) {
            if ((this.listMBExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.listMBExCompleted(this, new listMBExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void listMBExAsync(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string dateFrom, string dateTo, string itemFrom, string itemTo, string documentStatus, int timeout) {
            this.listMBExAsync(name, password, partnerILN, documentType, documentVersion, documentStandard, documentTest, dateFrom, dateTo, itemFrom, itemTo, documentStatus, timeout, null);
        }
        
        public void listMBExAsync(string name, string password, string partnerILN, string documentType, string documentVersion, string documentStandard, string documentTest, string dateFrom, string dateTo, string itemFrom, string itemTo, string documentStatus, int timeout, object userState) {
            if ((this.onBeginlistMBExDelegate == null)) {
                this.onBeginlistMBExDelegate = new BeginOperationDelegate(this.OnBeginlistMBEx);
            }
            if ((this.onEndlistMBExDelegate == null)) {
                this.onEndlistMBExDelegate = new EndOperationDelegate(this.OnEndlistMBEx);
            }
            if ((this.onlistMBExCompletedDelegate == null)) {
                this.onlistMBExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnlistMBExCompleted);
            }
            base.InvokeAsync(this.onBeginlistMBExDelegate, new object[] {
                        name,
                        password,
                        partnerILN,
                        documentType,
                        documentVersion,
                        documentStandard,
                        documentTest,
                        dateFrom,
                        dateTo,
                        itemFrom,
                        itemTo,
                        documentStatus,
                        timeout}, this.onEndlistMBExDelegate, this.onlistMBExCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listMBLastResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.listMBLast(Edisoft.WebService.EdiWebService.listMBLastRequest request) {
            return base.Channel.listMBLast(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes listMBLast(string name, string password) {
            Edisoft.WebService.EdiWebService.listMBLastRequest inValue = new Edisoft.WebService.EdiWebService.listMBLastRequest();
            inValue.name = name;
            inValue.password = password;
            Edisoft.WebService.EdiWebService.listMBLastResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).listMBLast(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginlistMBLast(Edisoft.WebService.EdiWebService.listMBLastRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginlistMBLast(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginlistMBLast(string name, string password, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.listMBLastRequest inValue = new Edisoft.WebService.EdiWebService.listMBLastRequest();
            inValue.name = name;
            inValue.password = password;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginlistMBLast(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listMBLastResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndlistMBLast(System.IAsyncResult result) {
            return base.Channel.EndlistMBLast(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndlistMBLast(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.listMBLastResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndlistMBLast(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginlistMBLast(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return this.BeginlistMBLast(name, password, callback, asyncState);
        }
        
        private object[] OnEndlistMBLast(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndlistMBLast(result);
            return new object[] {
                    retVal};
        }
        
        private void OnlistMBLastCompleted(object state) {
            if ((this.listMBLastCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.listMBLastCompleted(this, new listMBLastCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void listMBLastAsync(string name, string password) {
            this.listMBLastAsync(name, password, null);
        }
        
        public void listMBLastAsync(string name, string password, object userState) {
            if ((this.onBeginlistMBLastDelegate == null)) {
                this.onBeginlistMBLastDelegate = new BeginOperationDelegate(this.OnBeginlistMBLast);
            }
            if ((this.onEndlistMBLastDelegate == null)) {
                this.onEndlistMBLastDelegate = new EndOperationDelegate(this.OnEndlistMBLast);
            }
            if ((this.onlistMBLastCompletedDelegate == null)) {
                this.onlistMBLastCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnlistMBLastCompleted);
            }
            base.InvokeAsync(this.onBeginlistMBLastDelegate, new object[] {
                        name,
                        password}, this.onEndlistMBLastDelegate, this.onlistMBLastCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listMBRefResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.listMBRef(Edisoft.WebService.EdiWebService.listMBRefRequest request) {
            return base.Channel.listMBRef(request);
        }
        
        public Edisoft.WebService.EdiWebService.listMBAllExModel listMBRef(string name, string password, string partnerILN, string[] documentNumber, string documentType) {
            Edisoft.WebService.EdiWebService.listMBRefRequest inValue = new Edisoft.WebService.EdiWebService.listMBRefRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerILN = partnerILN;
            inValue.documentNumber = documentNumber;
            inValue.documentType = documentType;
            Edisoft.WebService.EdiWebService.listMBRefResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).listMBRef(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginlistMBRef(Edisoft.WebService.EdiWebService.listMBRefRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginlistMBRef(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginlistMBRef(string name, string password, string partnerILN, string[] documentNumber, string documentType, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.listMBRefRequest inValue = new Edisoft.WebService.EdiWebService.listMBRefRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerILN = partnerILN;
            inValue.documentNumber = documentNumber;
            inValue.documentType = documentType;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginlistMBRef(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listMBRefResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndlistMBRef(System.IAsyncResult result) {
            return base.Channel.EndlistMBRef(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.listMBAllExModel EndlistMBRef(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.listMBRefResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndlistMBRef(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginlistMBRef(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string partnerILN = ((string)(inValues[2]));
            string[] documentNumber = ((string[])(inValues[3]));
            string documentType = ((string)(inValues[4]));
            return this.BeginlistMBRef(name, password, partnerILN, documentNumber, documentType, callback, asyncState);
        }
        
        private object[] OnEndlistMBRef(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.listMBAllExModel retVal = this.EndlistMBRef(result);
            return new object[] {
                    retVal};
        }
        
        private void OnlistMBRefCompleted(object state) {
            if ((this.listMBRefCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.listMBRefCompleted(this, new listMBRefCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void listMBRefAsync(string name, string password, string partnerILN, string[] documentNumber, string documentType) {
            this.listMBRefAsync(name, password, partnerILN, documentNumber, documentType, null);
        }
        
        public void listMBRefAsync(string name, string password, string partnerILN, string[] documentNumber, string documentType, object userState) {
            if ((this.onBeginlistMBRefDelegate == null)) {
                this.onBeginlistMBRefDelegate = new BeginOperationDelegate(this.OnBeginlistMBRef);
            }
            if ((this.onEndlistMBRefDelegate == null)) {
                this.onEndlistMBRefDelegate = new EndOperationDelegate(this.OnEndlistMBRef);
            }
            if ((this.onlistMBRefCompletedDelegate == null)) {
                this.onlistMBRefCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnlistMBRefCompleted);
            }
            base.InvokeAsync(this.onBeginlistMBRefDelegate, new object[] {
                        name,
                        password,
                        partnerILN,
                        documentNumber,
                        documentType}, this.onEndlistMBRefDelegate, this.onlistMBRefCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.relationshipsXMLResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.relationshipsXML(Edisoft.WebService.EdiWebService.relationshipsXMLRequest request) {
            return base.Channel.relationshipsXML(request);
        }
        
        public Edisoft.WebService.EdiWebService.relationshipsModel relationshipsXML(string name, string password, int timeout) {
            Edisoft.WebService.EdiWebService.relationshipsXMLRequest inValue = new Edisoft.WebService.EdiWebService.relationshipsXMLRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.timeout = timeout;
            Edisoft.WebService.EdiWebService.relationshipsXMLResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).relationshipsXML(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginrelationshipsXML(Edisoft.WebService.EdiWebService.relationshipsXMLRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginrelationshipsXML(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginrelationshipsXML(string name, string password, int timeout, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.relationshipsXMLRequest inValue = new Edisoft.WebService.EdiWebService.relationshipsXMLRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.timeout = timeout;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginrelationshipsXML(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.relationshipsXMLResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndrelationshipsXML(System.IAsyncResult result) {
            return base.Channel.EndrelationshipsXML(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.relationshipsModel EndrelationshipsXML(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.relationshipsXMLResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndrelationshipsXML(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginrelationshipsXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            int timeout = ((int)(inValues[2]));
            return this.BeginrelationshipsXML(name, password, timeout, callback, asyncState);
        }
        
        private object[] OnEndrelationshipsXML(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.relationshipsModel retVal = this.EndrelationshipsXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnrelationshipsXMLCompleted(object state) {
            if ((this.relationshipsXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.relationshipsXMLCompleted(this, new relationshipsXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void relationshipsXMLAsync(string name, string password, int timeout) {
            this.relationshipsXMLAsync(name, password, timeout, null);
        }
        
        public void relationshipsXMLAsync(string name, string password, int timeout, object userState) {
            if ((this.onBeginrelationshipsXMLDelegate == null)) {
                this.onBeginrelationshipsXMLDelegate = new BeginOperationDelegate(this.OnBeginrelationshipsXML);
            }
            if ((this.onEndrelationshipsXMLDelegate == null)) {
                this.onEndrelationshipsXMLDelegate = new EndOperationDelegate(this.OnEndrelationshipsXML);
            }
            if ((this.onrelationshipsXMLCompletedDelegate == null)) {
                this.onrelationshipsXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnrelationshipsXMLCompleted);
            }
            base.InvokeAsync(this.onBeginrelationshipsXMLDelegate, new object[] {
                        name,
                        password,
                        timeout}, this.onEndrelationshipsXMLDelegate, this.onrelationshipsXMLCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.execSQLResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.execSQL(Edisoft.WebService.EdiWebService.execSQLRequest request) {
            return base.Channel.execSQL(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes execSQL(string name, string password, string uid, string @params) {
            Edisoft.WebService.EdiWebService.execSQLRequest inValue = new Edisoft.WebService.EdiWebService.execSQLRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.uid = uid;
            inValue.@params = @params;
            Edisoft.WebService.EdiWebService.execSQLResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).execSQL(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginexecSQL(Edisoft.WebService.EdiWebService.execSQLRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginexecSQL(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginexecSQL(string name, string password, string uid, string @params, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.execSQLRequest inValue = new Edisoft.WebService.EdiWebService.execSQLRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.uid = uid;
            inValue.@params = @params;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginexecSQL(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.execSQLResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndexecSQL(System.IAsyncResult result) {
            return base.Channel.EndexecSQL(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndexecSQL(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.execSQLResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndexecSQL(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginexecSQL(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string uid = ((string)(inValues[2]));
            string @params = ((string)(inValues[3]));
            return this.BeginexecSQL(name, password, uid, @params, callback, asyncState);
        }
        
        private object[] OnEndexecSQL(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndexecSQL(result);
            return new object[] {
                    retVal};
        }
        
        private void OnexecSQLCompleted(object state) {
            if ((this.execSQLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.execSQLCompleted(this, new execSQLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void execSQLAsync(string name, string password, string uid, string @params) {
            this.execSQLAsync(name, password, uid, @params, null);
        }
        
        public void execSQLAsync(string name, string password, string uid, string @params, object userState) {
            if ((this.onBeginexecSQLDelegate == null)) {
                this.onBeginexecSQLDelegate = new BeginOperationDelegate(this.OnBeginexecSQL);
            }
            if ((this.onEndexecSQLDelegate == null)) {
                this.onEndexecSQLDelegate = new EndOperationDelegate(this.OnEndexecSQL);
            }
            if ((this.onexecSQLCompletedDelegate == null)) {
                this.onexecSQLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnexecSQLCompleted);
            }
            base.InvokeAsync(this.onBeginexecSQLDelegate, new object[] {
                        name,
                        password,
                        uid,
                        @params}, this.onEndexecSQLDelegate, this.onexecSQLCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.generateDocumentResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.generateDocument(Edisoft.WebService.EdiWebService.generateDocumentRequest request) {
            return base.Channel.generateDocument(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes generateDocument(string name, string password, string trackingId, string documentType) {
            Edisoft.WebService.EdiWebService.generateDocumentRequest inValue = new Edisoft.WebService.EdiWebService.generateDocumentRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.trackingId = trackingId;
            inValue.documentType = documentType;
            Edisoft.WebService.EdiWebService.generateDocumentResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).generateDocument(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BegingenerateDocument(Edisoft.WebService.EdiWebService.generateDocumentRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingenerateDocument(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingenerateDocument(string name, string password, string trackingId, string documentType, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.generateDocumentRequest inValue = new Edisoft.WebService.EdiWebService.generateDocumentRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.trackingId = trackingId;
            inValue.documentType = documentType;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BegingenerateDocument(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.generateDocumentResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndgenerateDocument(System.IAsyncResult result) {
            return base.Channel.EndgenerateDocument(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndgenerateDocument(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.generateDocumentResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndgenerateDocument(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBegingenerateDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string trackingId = ((string)(inValues[2]));
            string documentType = ((string)(inValues[3]));
            return this.BegingenerateDocument(name, password, trackingId, documentType, callback, asyncState);
        }
        
        private object[] OnEndgenerateDocument(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndgenerateDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OngenerateDocumentCompleted(object state) {
            if ((this.generateDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.generateDocumentCompleted(this, new generateDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void generateDocumentAsync(string name, string password, string trackingId, string documentType) {
            this.generateDocumentAsync(name, password, trackingId, documentType, null);
        }
        
        public void generateDocumentAsync(string name, string password, string trackingId, string documentType, object userState) {
            if ((this.onBegingenerateDocumentDelegate == null)) {
                this.onBegingenerateDocumentDelegate = new BeginOperationDelegate(this.OnBegingenerateDocument);
            }
            if ((this.onEndgenerateDocumentDelegate == null)) {
                this.onEndgenerateDocumentDelegate = new EndOperationDelegate(this.OnEndgenerateDocument);
            }
            if ((this.ongenerateDocumentCompletedDelegate == null)) {
                this.ongenerateDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngenerateDocumentCompleted);
            }
            base.InvokeAsync(this.onBegingenerateDocumentDelegate, new object[] {
                        name,
                        password,
                        trackingId,
                        documentType}, this.onEndgenerateDocumentDelegate, this.ongenerateDocumentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.localizationInfoXMLResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.localizationInfoXML(Edisoft.WebService.EdiWebService.localizationInfoXMLRequest request) {
            return base.Channel.localizationInfoXML(request);
        }
        
        public Edisoft.WebService.EdiWebService.localizationInfoXMLModel localizationInfoXML(string name, string password, string type, string sender, string headquarters, string localization, string regionCode) {
            Edisoft.WebService.EdiWebService.localizationInfoXMLRequest inValue = new Edisoft.WebService.EdiWebService.localizationInfoXMLRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.type = type;
            inValue.sender = sender;
            inValue.headquarters = headquarters;
            inValue.localization = localization;
            inValue.regionCode = regionCode;
            Edisoft.WebService.EdiWebService.localizationInfoXMLResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).localizationInfoXML(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginlocalizationInfoXML(Edisoft.WebService.EdiWebService.localizationInfoXMLRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginlocalizationInfoXML(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginlocalizationInfoXML(string name, string password, string type, string sender, string headquarters, string localization, string regionCode, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.localizationInfoXMLRequest inValue = new Edisoft.WebService.EdiWebService.localizationInfoXMLRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.type = type;
            inValue.sender = sender;
            inValue.headquarters = headquarters;
            inValue.localization = localization;
            inValue.regionCode = regionCode;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginlocalizationInfoXML(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.localizationInfoXMLResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndlocalizationInfoXML(System.IAsyncResult result) {
            return base.Channel.EndlocalizationInfoXML(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.localizationInfoXMLModel EndlocalizationInfoXML(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.localizationInfoXMLResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndlocalizationInfoXML(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginlocalizationInfoXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string type = ((string)(inValues[2]));
            string sender = ((string)(inValues[3]));
            string headquarters = ((string)(inValues[4]));
            string localization = ((string)(inValues[5]));
            string regionCode = ((string)(inValues[6]));
            return this.BeginlocalizationInfoXML(name, password, type, sender, headquarters, localization, regionCode, callback, asyncState);
        }
        
        private object[] OnEndlocalizationInfoXML(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.localizationInfoXMLModel retVal = this.EndlocalizationInfoXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnlocalizationInfoXMLCompleted(object state) {
            if ((this.localizationInfoXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.localizationInfoXMLCompleted(this, new localizationInfoXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void localizationInfoXMLAsync(string name, string password, string type, string sender, string headquarters, string localization, string regionCode) {
            this.localizationInfoXMLAsync(name, password, type, sender, headquarters, localization, regionCode, null);
        }
        
        public void localizationInfoXMLAsync(string name, string password, string type, string sender, string headquarters, string localization, string regionCode, object userState) {
            if ((this.onBeginlocalizationInfoXMLDelegate == null)) {
                this.onBeginlocalizationInfoXMLDelegate = new BeginOperationDelegate(this.OnBeginlocalizationInfoXML);
            }
            if ((this.onEndlocalizationInfoXMLDelegate == null)) {
                this.onEndlocalizationInfoXMLDelegate = new EndOperationDelegate(this.OnEndlocalizationInfoXML);
            }
            if ((this.onlocalizationInfoXMLCompletedDelegate == null)) {
                this.onlocalizationInfoXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnlocalizationInfoXMLCompleted);
            }
            base.InvokeAsync(this.onBeginlocalizationInfoXMLDelegate, new object[] {
                        name,
                        password,
                        type,
                        sender,
                        headquarters,
                        localization,
                        regionCode}, this.onEndlocalizationInfoXMLDelegate, this.onlocalizationInfoXMLCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.checkPacketStatusResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.checkPacketStatus(Edisoft.WebService.EdiWebService.checkPacketStatusRequest request) {
            return base.Channel.checkPacketStatus(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes checkPacketStatus(string name, string password, long packetId) {
            Edisoft.WebService.EdiWebService.checkPacketStatusRequest inValue = new Edisoft.WebService.EdiWebService.checkPacketStatusRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.packetId = packetId;
            Edisoft.WebService.EdiWebService.checkPacketStatusResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).checkPacketStatus(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BegincheckPacketStatus(Edisoft.WebService.EdiWebService.checkPacketStatusRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegincheckPacketStatus(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegincheckPacketStatus(string name, string password, long packetId, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.checkPacketStatusRequest inValue = new Edisoft.WebService.EdiWebService.checkPacketStatusRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.packetId = packetId;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BegincheckPacketStatus(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.checkPacketStatusResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndcheckPacketStatus(System.IAsyncResult result) {
            return base.Channel.EndcheckPacketStatus(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndcheckPacketStatus(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.checkPacketStatusResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndcheckPacketStatus(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBegincheckPacketStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            long packetId = ((long)(inValues[2]));
            return this.BegincheckPacketStatus(name, password, packetId, callback, asyncState);
        }
        
        private object[] OnEndcheckPacketStatus(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndcheckPacketStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OncheckPacketStatusCompleted(object state) {
            if ((this.checkPacketStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.checkPacketStatusCompleted(this, new checkPacketStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void checkPacketStatusAsync(string name, string password, long packetId) {
            this.checkPacketStatusAsync(name, password, packetId, null);
        }
        
        public void checkPacketStatusAsync(string name, string password, long packetId, object userState) {
            if ((this.onBegincheckPacketStatusDelegate == null)) {
                this.onBegincheckPacketStatusDelegate = new BeginOperationDelegate(this.OnBegincheckPacketStatus);
            }
            if ((this.onEndcheckPacketStatusDelegate == null)) {
                this.onEndcheckPacketStatusDelegate = new EndOperationDelegate(this.OnEndcheckPacketStatus);
            }
            if ((this.oncheckPacketStatusCompletedDelegate == null)) {
                this.oncheckPacketStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OncheckPacketStatusCompleted);
            }
            base.InvokeAsync(this.onBegincheckPacketStatusDelegate, new object[] {
                        name,
                        password,
                        packetId}, this.onEndcheckPacketStatusDelegate, this.oncheckPacketStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listForIntegrationResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.listForIntegration(Edisoft.WebService.EdiWebService.listForIntegrationRequest request) {
            return base.Channel.listForIntegration(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes listForIntegration(string systemLogin, string systemPassword, string userLogin, string userPassword, string receiver, string docType, string itemCount, string dateFrom, string dateTo) {
            Edisoft.WebService.EdiWebService.listForIntegrationRequest inValue = new Edisoft.WebService.EdiWebService.listForIntegrationRequest();
            inValue.systemLogin = systemLogin;
            inValue.systemPassword = systemPassword;
            inValue.userLogin = userLogin;
            inValue.userPassword = userPassword;
            inValue.receiver = receiver;
            inValue.docType = docType;
            inValue.itemCount = itemCount;
            inValue.dateFrom = dateFrom;
            inValue.dateTo = dateTo;
            Edisoft.WebService.EdiWebService.listForIntegrationResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).listForIntegration(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginlistForIntegration(Edisoft.WebService.EdiWebService.listForIntegrationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginlistForIntegration(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginlistForIntegration(string systemLogin, string systemPassword, string userLogin, string userPassword, string receiver, string docType, string itemCount, string dateFrom, string dateTo, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.listForIntegrationRequest inValue = new Edisoft.WebService.EdiWebService.listForIntegrationRequest();
            inValue.systemLogin = systemLogin;
            inValue.systemPassword = systemPassword;
            inValue.userLogin = userLogin;
            inValue.userPassword = userPassword;
            inValue.receiver = receiver;
            inValue.docType = docType;
            inValue.itemCount = itemCount;
            inValue.dateFrom = dateFrom;
            inValue.dateTo = dateTo;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginlistForIntegration(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listForIntegrationResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndlistForIntegration(System.IAsyncResult result) {
            return base.Channel.EndlistForIntegration(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndlistForIntegration(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.listForIntegrationResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndlistForIntegration(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginlistForIntegration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string systemLogin = ((string)(inValues[0]));
            string systemPassword = ((string)(inValues[1]));
            string userLogin = ((string)(inValues[2]));
            string userPassword = ((string)(inValues[3]));
            string receiver = ((string)(inValues[4]));
            string docType = ((string)(inValues[5]));
            string itemCount = ((string)(inValues[6]));
            string dateFrom = ((string)(inValues[7]));
            string dateTo = ((string)(inValues[8]));
            return this.BeginlistForIntegration(systemLogin, systemPassword, userLogin, userPassword, receiver, docType, itemCount, dateFrom, dateTo, callback, asyncState);
        }
        
        private object[] OnEndlistForIntegration(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndlistForIntegration(result);
            return new object[] {
                    retVal};
        }
        
        private void OnlistForIntegrationCompleted(object state) {
            if ((this.listForIntegrationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.listForIntegrationCompleted(this, new listForIntegrationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void listForIntegrationAsync(string systemLogin, string systemPassword, string userLogin, string userPassword, string receiver, string docType, string itemCount, string dateFrom, string dateTo) {
            this.listForIntegrationAsync(systemLogin, systemPassword, userLogin, userPassword, receiver, docType, itemCount, dateFrom, dateTo, null);
        }
        
        public void listForIntegrationAsync(string systemLogin, string systemPassword, string userLogin, string userPassword, string receiver, string docType, string itemCount, string dateFrom, string dateTo, object userState) {
            if ((this.onBeginlistForIntegrationDelegate == null)) {
                this.onBeginlistForIntegrationDelegate = new BeginOperationDelegate(this.OnBeginlistForIntegration);
            }
            if ((this.onEndlistForIntegrationDelegate == null)) {
                this.onEndlistForIntegrationDelegate = new EndOperationDelegate(this.OnEndlistForIntegration);
            }
            if ((this.onlistForIntegrationCompletedDelegate == null)) {
                this.onlistForIntegrationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnlistForIntegrationCompleted);
            }
            base.InvokeAsync(this.onBeginlistForIntegrationDelegate, new object[] {
                        systemLogin,
                        systemPassword,
                        userLogin,
                        userPassword,
                        receiver,
                        docType,
                        itemCount,
                        dateFrom,
                        dateTo}, this.onEndlistForIntegrationDelegate, this.onlistForIntegrationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listBinaryforIntegrationFNSResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.listBinaryforIntegrationFNS(Edisoft.WebService.EdiWebService.listBinaryforIntegrationFNSRequest request) {
            return base.Channel.listBinaryforIntegrationFNS(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes listBinaryforIntegrationFNS(string userLogin, string userPassword, string trackingId) {
            Edisoft.WebService.EdiWebService.listBinaryforIntegrationFNSRequest inValue = new Edisoft.WebService.EdiWebService.listBinaryforIntegrationFNSRequest();
            inValue.userLogin = userLogin;
            inValue.userPassword = userPassword;
            inValue.trackingId = trackingId;
            Edisoft.WebService.EdiWebService.listBinaryforIntegrationFNSResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).listBinaryforIntegrationFNS(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginlistBinaryforIntegrationFNS(Edisoft.WebService.EdiWebService.listBinaryforIntegrationFNSRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginlistBinaryforIntegrationFNS(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginlistBinaryforIntegrationFNS(string userLogin, string userPassword, string trackingId, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.listBinaryforIntegrationFNSRequest inValue = new Edisoft.WebService.EdiWebService.listBinaryforIntegrationFNSRequest();
            inValue.userLogin = userLogin;
            inValue.userPassword = userPassword;
            inValue.trackingId = trackingId;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginlistBinaryforIntegrationFNS(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listBinaryforIntegrationFNSResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndlistBinaryforIntegrationFNS(System.IAsyncResult result) {
            return base.Channel.EndlistBinaryforIntegrationFNS(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndlistBinaryforIntegrationFNS(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.listBinaryforIntegrationFNSResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndlistBinaryforIntegrationFNS(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginlistBinaryforIntegrationFNS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userLogin = ((string)(inValues[0]));
            string userPassword = ((string)(inValues[1]));
            string trackingId = ((string)(inValues[2]));
            return this.BeginlistBinaryforIntegrationFNS(userLogin, userPassword, trackingId, callback, asyncState);
        }
        
        private object[] OnEndlistBinaryforIntegrationFNS(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndlistBinaryforIntegrationFNS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnlistBinaryforIntegrationFNSCompleted(object state) {
            if ((this.listBinaryforIntegrationFNSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.listBinaryforIntegrationFNSCompleted(this, new listBinaryforIntegrationFNSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void listBinaryforIntegrationFNSAsync(string userLogin, string userPassword, string trackingId) {
            this.listBinaryforIntegrationFNSAsync(userLogin, userPassword, trackingId, null);
        }
        
        public void listBinaryforIntegrationFNSAsync(string userLogin, string userPassword, string trackingId, object userState) {
            if ((this.onBeginlistBinaryforIntegrationFNSDelegate == null)) {
                this.onBeginlistBinaryforIntegrationFNSDelegate = new BeginOperationDelegate(this.OnBeginlistBinaryforIntegrationFNS);
            }
            if ((this.onEndlistBinaryforIntegrationFNSDelegate == null)) {
                this.onEndlistBinaryforIntegrationFNSDelegate = new EndOperationDelegate(this.OnEndlistBinaryforIntegrationFNS);
            }
            if ((this.onlistBinaryforIntegrationFNSCompletedDelegate == null)) {
                this.onlistBinaryforIntegrationFNSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnlistBinaryforIntegrationFNSCompleted);
            }
            base.InvokeAsync(this.onBeginlistBinaryforIntegrationFNSDelegate, new object[] {
                        userLogin,
                        userPassword,
                        trackingId}, this.onEndlistBinaryforIntegrationFNSDelegate, this.onlistBinaryforIntegrationFNSCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.receiveDocForIntegrationResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.receiveDocForIntegration(Edisoft.WebService.EdiWebService.receiveDocForIntegrationRequest request) {
            return base.Channel.receiveDocForIntegration(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes receiveDocForIntegration(string systemLogin, string systemPassword, string userLogin, string userPassword, string trackingId) {
            Edisoft.WebService.EdiWebService.receiveDocForIntegrationRequest inValue = new Edisoft.WebService.EdiWebService.receiveDocForIntegrationRequest();
            inValue.systemLogin = systemLogin;
            inValue.systemPassword = systemPassword;
            inValue.userLogin = userLogin;
            inValue.userPassword = userPassword;
            inValue.trackingId = trackingId;
            Edisoft.WebService.EdiWebService.receiveDocForIntegrationResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).receiveDocForIntegration(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginreceiveDocForIntegration(Edisoft.WebService.EdiWebService.receiveDocForIntegrationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginreceiveDocForIntegration(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginreceiveDocForIntegration(string systemLogin, string systemPassword, string userLogin, string userPassword, string trackingId, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.receiveDocForIntegrationRequest inValue = new Edisoft.WebService.EdiWebService.receiveDocForIntegrationRequest();
            inValue.systemLogin = systemLogin;
            inValue.systemPassword = systemPassword;
            inValue.userLogin = userLogin;
            inValue.userPassword = userPassword;
            inValue.trackingId = trackingId;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginreceiveDocForIntegration(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.receiveDocForIntegrationResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndreceiveDocForIntegration(System.IAsyncResult result) {
            return base.Channel.EndreceiveDocForIntegration(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndreceiveDocForIntegration(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.receiveDocForIntegrationResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndreceiveDocForIntegration(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginreceiveDocForIntegration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string systemLogin = ((string)(inValues[0]));
            string systemPassword = ((string)(inValues[1]));
            string userLogin = ((string)(inValues[2]));
            string userPassword = ((string)(inValues[3]));
            string trackingId = ((string)(inValues[4]));
            return this.BeginreceiveDocForIntegration(systemLogin, systemPassword, userLogin, userPassword, trackingId, callback, asyncState);
        }
        
        private object[] OnEndreceiveDocForIntegration(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndreceiveDocForIntegration(result);
            return new object[] {
                    retVal};
        }
        
        private void OnreceiveDocForIntegrationCompleted(object state) {
            if ((this.receiveDocForIntegrationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.receiveDocForIntegrationCompleted(this, new receiveDocForIntegrationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void receiveDocForIntegrationAsync(string systemLogin, string systemPassword, string userLogin, string userPassword, string trackingId) {
            this.receiveDocForIntegrationAsync(systemLogin, systemPassword, userLogin, userPassword, trackingId, null);
        }
        
        public void receiveDocForIntegrationAsync(string systemLogin, string systemPassword, string userLogin, string userPassword, string trackingId, object userState) {
            if ((this.onBeginreceiveDocForIntegrationDelegate == null)) {
                this.onBeginreceiveDocForIntegrationDelegate = new BeginOperationDelegate(this.OnBeginreceiveDocForIntegration);
            }
            if ((this.onEndreceiveDocForIntegrationDelegate == null)) {
                this.onEndreceiveDocForIntegrationDelegate = new EndOperationDelegate(this.OnEndreceiveDocForIntegration);
            }
            if ((this.onreceiveDocForIntegrationCompletedDelegate == null)) {
                this.onreceiveDocForIntegrationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnreceiveDocForIntegrationCompleted);
            }
            base.InvokeAsync(this.onBeginreceiveDocForIntegrationDelegate, new object[] {
                        systemLogin,
                        systemPassword,
                        userLogin,
                        userPassword,
                        trackingId}, this.onEndreceiveDocForIntegrationDelegate, this.onreceiveDocForIntegrationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.setIntegrationStateResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.setIntegrationState(Edisoft.WebService.EdiWebService.setIntegrationStateRequest request) {
            return base.Channel.setIntegrationState(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes setIntegrationState(string systemLogin, string systemPassword, string userLogin, string userPassword, string trackingId, string state, string message) {
            Edisoft.WebService.EdiWebService.setIntegrationStateRequest inValue = new Edisoft.WebService.EdiWebService.setIntegrationStateRequest();
            inValue.systemLogin = systemLogin;
            inValue.systemPassword = systemPassword;
            inValue.userLogin = userLogin;
            inValue.userPassword = userPassword;
            inValue.trackingId = trackingId;
            inValue.state = state;
            inValue.message = message;
            Edisoft.WebService.EdiWebService.setIntegrationStateResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).setIntegrationState(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginsetIntegrationState(Edisoft.WebService.EdiWebService.setIntegrationStateRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginsetIntegrationState(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginsetIntegrationState(string systemLogin, string systemPassword, string userLogin, string userPassword, string trackingId, string state, string message, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.setIntegrationStateRequest inValue = new Edisoft.WebService.EdiWebService.setIntegrationStateRequest();
            inValue.systemLogin = systemLogin;
            inValue.systemPassword = systemPassword;
            inValue.userLogin = userLogin;
            inValue.userPassword = userPassword;
            inValue.trackingId = trackingId;
            inValue.state = state;
            inValue.message = message;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginsetIntegrationState(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.setIntegrationStateResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndsetIntegrationState(System.IAsyncResult result) {
            return base.Channel.EndsetIntegrationState(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndsetIntegrationState(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.setIntegrationStateResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndsetIntegrationState(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginsetIntegrationState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string systemLogin = ((string)(inValues[0]));
            string systemPassword = ((string)(inValues[1]));
            string userLogin = ((string)(inValues[2]));
            string userPassword = ((string)(inValues[3]));
            string trackingId = ((string)(inValues[4]));
            string state = ((string)(inValues[5]));
            string message = ((string)(inValues[6]));
            return this.BeginsetIntegrationState(systemLogin, systemPassword, userLogin, userPassword, trackingId, state, message, callback, asyncState);
        }
        
        private object[] OnEndsetIntegrationState(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndsetIntegrationState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnsetIntegrationStateCompleted(object state) {
            if ((this.setIntegrationStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.setIntegrationStateCompleted(this, new setIntegrationStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void setIntegrationStateAsync(string systemLogin, string systemPassword, string userLogin, string userPassword, string trackingId, string state, string message) {
            this.setIntegrationStateAsync(systemLogin, systemPassword, userLogin, userPassword, trackingId, state, message, null);
        }
        
        public void setIntegrationStateAsync(string systemLogin, string systemPassword, string userLogin, string userPassword, string trackingId, string state, string message, object userState) {
            if ((this.onBeginsetIntegrationStateDelegate == null)) {
                this.onBeginsetIntegrationStateDelegate = new BeginOperationDelegate(this.OnBeginsetIntegrationState);
            }
            if ((this.onEndsetIntegrationStateDelegate == null)) {
                this.onEndsetIntegrationStateDelegate = new EndOperationDelegate(this.OnEndsetIntegrationState);
            }
            if ((this.onsetIntegrationStateCompletedDelegate == null)) {
                this.onsetIntegrationStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsetIntegrationStateCompleted);
            }
            base.InvokeAsync(this.onBeginsetIntegrationStateDelegate, new object[] {
                        systemLogin,
                        systemPassword,
                        userLogin,
                        userPassword,
                        trackingId,
                        state,
                        message}, this.onEndsetIntegrationStateDelegate, this.onsetIntegrationStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.receiveBinaryforIntegrationResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.receiveBinaryforIntegration(Edisoft.WebService.EdiWebService.receiveBinaryforIntegrationRequest request) {
            return base.Channel.receiveBinaryforIntegration(request);
        }
        
        public Edisoft.WebService.EdiWebService.ediFileData receiveBinaryforIntegration(string systemLogin, string systemPassword, string userLogin, string userPassword, string trackingId) {
            Edisoft.WebService.EdiWebService.receiveBinaryforIntegrationRequest inValue = new Edisoft.WebService.EdiWebService.receiveBinaryforIntegrationRequest();
            inValue.systemLogin = systemLogin;
            inValue.systemPassword = systemPassword;
            inValue.userLogin = userLogin;
            inValue.userPassword = userPassword;
            inValue.trackingId = trackingId;
            Edisoft.WebService.EdiWebService.receiveBinaryforIntegrationResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).receiveBinaryforIntegration(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginreceiveBinaryforIntegration(Edisoft.WebService.EdiWebService.receiveBinaryforIntegrationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginreceiveBinaryforIntegration(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginreceiveBinaryforIntegration(string systemLogin, string systemPassword, string userLogin, string userPassword, string trackingId, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.receiveBinaryforIntegrationRequest inValue = new Edisoft.WebService.EdiWebService.receiveBinaryforIntegrationRequest();
            inValue.systemLogin = systemLogin;
            inValue.systemPassword = systemPassword;
            inValue.userLogin = userLogin;
            inValue.userPassword = userPassword;
            inValue.trackingId = trackingId;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginreceiveBinaryforIntegration(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.receiveBinaryforIntegrationResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndreceiveBinaryforIntegration(System.IAsyncResult result) {
            return base.Channel.EndreceiveBinaryforIntegration(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.ediFileData EndreceiveBinaryforIntegration(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.receiveBinaryforIntegrationResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndreceiveBinaryforIntegration(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginreceiveBinaryforIntegration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string systemLogin = ((string)(inValues[0]));
            string systemPassword = ((string)(inValues[1]));
            string userLogin = ((string)(inValues[2]));
            string userPassword = ((string)(inValues[3]));
            string trackingId = ((string)(inValues[4]));
            return this.BeginreceiveBinaryforIntegration(systemLogin, systemPassword, userLogin, userPassword, trackingId, callback, asyncState);
        }
        
        private object[] OnEndreceiveBinaryforIntegration(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.ediFileData retVal = this.EndreceiveBinaryforIntegration(result);
            return new object[] {
                    retVal};
        }
        
        private void OnreceiveBinaryforIntegrationCompleted(object state) {
            if ((this.receiveBinaryforIntegrationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.receiveBinaryforIntegrationCompleted(this, new receiveBinaryforIntegrationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void receiveBinaryforIntegrationAsync(string systemLogin, string systemPassword, string userLogin, string userPassword, string trackingId) {
            this.receiveBinaryforIntegrationAsync(systemLogin, systemPassword, userLogin, userPassword, trackingId, null);
        }
        
        public void receiveBinaryforIntegrationAsync(string systemLogin, string systemPassword, string userLogin, string userPassword, string trackingId, object userState) {
            if ((this.onBeginreceiveBinaryforIntegrationDelegate == null)) {
                this.onBeginreceiveBinaryforIntegrationDelegate = new BeginOperationDelegate(this.OnBeginreceiveBinaryforIntegration);
            }
            if ((this.onEndreceiveBinaryforIntegrationDelegate == null)) {
                this.onEndreceiveBinaryforIntegrationDelegate = new EndOperationDelegate(this.OnEndreceiveBinaryforIntegration);
            }
            if ((this.onreceiveBinaryforIntegrationCompletedDelegate == null)) {
                this.onreceiveBinaryforIntegrationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnreceiveBinaryforIntegrationCompleted);
            }
            base.InvokeAsync(this.onBeginreceiveBinaryforIntegrationDelegate, new object[] {
                        systemLogin,
                        systemPassword,
                        userLogin,
                        userPassword,
                        trackingId}, this.onEndreceiveBinaryforIntegrationDelegate, this.onreceiveBinaryforIntegrationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listForIntegrationErrorsResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.listForIntegrationErrors(Edisoft.WebService.EdiWebService.listForIntegrationErrorsRequest request) {
            return base.Channel.listForIntegrationErrors(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes listForIntegrationErrors(string systemLogin, string systemPassword) {
            Edisoft.WebService.EdiWebService.listForIntegrationErrorsRequest inValue = new Edisoft.WebService.EdiWebService.listForIntegrationErrorsRequest();
            inValue.systemLogin = systemLogin;
            inValue.systemPassword = systemPassword;
            Edisoft.WebService.EdiWebService.listForIntegrationErrorsResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).listForIntegrationErrors(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginlistForIntegrationErrors(Edisoft.WebService.EdiWebService.listForIntegrationErrorsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginlistForIntegrationErrors(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginlistForIntegrationErrors(string systemLogin, string systemPassword, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.listForIntegrationErrorsRequest inValue = new Edisoft.WebService.EdiWebService.listForIntegrationErrorsRequest();
            inValue.systemLogin = systemLogin;
            inValue.systemPassword = systemPassword;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginlistForIntegrationErrors(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listForIntegrationErrorsResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndlistForIntegrationErrors(System.IAsyncResult result) {
            return base.Channel.EndlistForIntegrationErrors(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndlistForIntegrationErrors(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.listForIntegrationErrorsResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndlistForIntegrationErrors(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginlistForIntegrationErrors(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string systemLogin = ((string)(inValues[0]));
            string systemPassword = ((string)(inValues[1]));
            return this.BeginlistForIntegrationErrors(systemLogin, systemPassword, callback, asyncState);
        }
        
        private object[] OnEndlistForIntegrationErrors(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndlistForIntegrationErrors(result);
            return new object[] {
                    retVal};
        }
        
        private void OnlistForIntegrationErrorsCompleted(object state) {
            if ((this.listForIntegrationErrorsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.listForIntegrationErrorsCompleted(this, new listForIntegrationErrorsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void listForIntegrationErrorsAsync(string systemLogin, string systemPassword) {
            this.listForIntegrationErrorsAsync(systemLogin, systemPassword, null);
        }
        
        public void listForIntegrationErrorsAsync(string systemLogin, string systemPassword, object userState) {
            if ((this.onBeginlistForIntegrationErrorsDelegate == null)) {
                this.onBeginlistForIntegrationErrorsDelegate = new BeginOperationDelegate(this.OnBeginlistForIntegrationErrors);
            }
            if ((this.onEndlistForIntegrationErrorsDelegate == null)) {
                this.onEndlistForIntegrationErrorsDelegate = new EndOperationDelegate(this.OnEndlistForIntegrationErrors);
            }
            if ((this.onlistForIntegrationErrorsCompletedDelegate == null)) {
                this.onlistForIntegrationErrorsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnlistForIntegrationErrorsCompleted);
            }
            base.InvokeAsync(this.onBeginlistForIntegrationErrorsDelegate, new object[] {
                        systemLogin,
                        systemPassword}, this.onEndlistForIntegrationErrorsDelegate, this.onlistForIntegrationErrorsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listForIntegrationIgnoredResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.listForIntegrationIgnored(Edisoft.WebService.EdiWebService.listForIntegrationIgnoredRequest request) {
            return base.Channel.listForIntegrationIgnored(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes listForIntegrationIgnored(string systemLogin, string systemPassword) {
            Edisoft.WebService.EdiWebService.listForIntegrationIgnoredRequest inValue = new Edisoft.WebService.EdiWebService.listForIntegrationIgnoredRequest();
            inValue.systemLogin = systemLogin;
            inValue.systemPassword = systemPassword;
            Edisoft.WebService.EdiWebService.listForIntegrationIgnoredResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).listForIntegrationIgnored(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginlistForIntegrationIgnored(Edisoft.WebService.EdiWebService.listForIntegrationIgnoredRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginlistForIntegrationIgnored(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginlistForIntegrationIgnored(string systemLogin, string systemPassword, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.listForIntegrationIgnoredRequest inValue = new Edisoft.WebService.EdiWebService.listForIntegrationIgnoredRequest();
            inValue.systemLogin = systemLogin;
            inValue.systemPassword = systemPassword;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginlistForIntegrationIgnored(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listForIntegrationIgnoredResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndlistForIntegrationIgnored(System.IAsyncResult result) {
            return base.Channel.EndlistForIntegrationIgnored(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndlistForIntegrationIgnored(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.listForIntegrationIgnoredResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndlistForIntegrationIgnored(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginlistForIntegrationIgnored(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string systemLogin = ((string)(inValues[0]));
            string systemPassword = ((string)(inValues[1]));
            return this.BeginlistForIntegrationIgnored(systemLogin, systemPassword, callback, asyncState);
        }
        
        private object[] OnEndlistForIntegrationIgnored(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndlistForIntegrationIgnored(result);
            return new object[] {
                    retVal};
        }
        
        private void OnlistForIntegrationIgnoredCompleted(object state) {
            if ((this.listForIntegrationIgnoredCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.listForIntegrationIgnoredCompleted(this, new listForIntegrationIgnoredCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void listForIntegrationIgnoredAsync(string systemLogin, string systemPassword) {
            this.listForIntegrationIgnoredAsync(systemLogin, systemPassword, null);
        }
        
        public void listForIntegrationIgnoredAsync(string systemLogin, string systemPassword, object userState) {
            if ((this.onBeginlistForIntegrationIgnoredDelegate == null)) {
                this.onBeginlistForIntegrationIgnoredDelegate = new BeginOperationDelegate(this.OnBeginlistForIntegrationIgnored);
            }
            if ((this.onEndlistForIntegrationIgnoredDelegate == null)) {
                this.onEndlistForIntegrationIgnoredDelegate = new EndOperationDelegate(this.OnEndlistForIntegrationIgnored);
            }
            if ((this.onlistForIntegrationIgnoredCompletedDelegate == null)) {
                this.onlistForIntegrationIgnoredCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnlistForIntegrationIgnoredCompleted);
            }
            base.InvokeAsync(this.onBeginlistForIntegrationIgnoredDelegate, new object[] {
                        systemLogin,
                        systemPassword}, this.onEndlistForIntegrationIgnoredDelegate, this.onlistForIntegrationIgnoredCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.getIntegrationStateResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.getIntegrationState(Edisoft.WebService.EdiWebService.getIntegrationStateRequest request) {
            return base.Channel.getIntegrationState(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes getIntegrationState(string systemLogin, string systemPassword, string trackingId) {
            Edisoft.WebService.EdiWebService.getIntegrationStateRequest inValue = new Edisoft.WebService.EdiWebService.getIntegrationStateRequest();
            inValue.systemLogin = systemLogin;
            inValue.systemPassword = systemPassword;
            inValue.trackingId = trackingId;
            Edisoft.WebService.EdiWebService.getIntegrationStateResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).getIntegrationState(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BegingetIntegrationState(Edisoft.WebService.EdiWebService.getIntegrationStateRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetIntegrationState(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetIntegrationState(string systemLogin, string systemPassword, string trackingId, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.getIntegrationStateRequest inValue = new Edisoft.WebService.EdiWebService.getIntegrationStateRequest();
            inValue.systemLogin = systemLogin;
            inValue.systemPassword = systemPassword;
            inValue.trackingId = trackingId;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BegingetIntegrationState(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.getIntegrationStateResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndgetIntegrationState(System.IAsyncResult result) {
            return base.Channel.EndgetIntegrationState(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndgetIntegrationState(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.getIntegrationStateResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndgetIntegrationState(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBegingetIntegrationState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string systemLogin = ((string)(inValues[0]));
            string systemPassword = ((string)(inValues[1]));
            string trackingId = ((string)(inValues[2]));
            return this.BegingetIntegrationState(systemLogin, systemPassword, trackingId, callback, asyncState);
        }
        
        private object[] OnEndgetIntegrationState(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndgetIntegrationState(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetIntegrationStateCompleted(object state) {
            if ((this.getIntegrationStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getIntegrationStateCompleted(this, new getIntegrationStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getIntegrationStateAsync(string systemLogin, string systemPassword, string trackingId) {
            this.getIntegrationStateAsync(systemLogin, systemPassword, trackingId, null);
        }
        
        public void getIntegrationStateAsync(string systemLogin, string systemPassword, string trackingId, object userState) {
            if ((this.onBegingetIntegrationStateDelegate == null)) {
                this.onBegingetIntegrationStateDelegate = new BeginOperationDelegate(this.OnBegingetIntegrationState);
            }
            if ((this.onEndgetIntegrationStateDelegate == null)) {
                this.onEndgetIntegrationStateDelegate = new EndOperationDelegate(this.OnEndgetIntegrationState);
            }
            if ((this.ongetIntegrationStateCompletedDelegate == null)) {
                this.ongetIntegrationStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetIntegrationStateCompleted);
            }
            base.InvokeAsync(this.onBegingetIntegrationStateDelegate, new object[] {
                        systemLogin,
                        systemPassword,
                        trackingId}, this.onEndgetIntegrationStateDelegate, this.ongetIntegrationStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.reprocessIntegrationDocsResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.reprocessIntegrationDocs(Edisoft.WebService.EdiWebService.reprocessIntegrationDocsRequest request) {
            return base.Channel.reprocessIntegrationDocs(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes reprocessIntegrationDocs(string systemLogin, string systemPassword, string trackingIds) {
            Edisoft.WebService.EdiWebService.reprocessIntegrationDocsRequest inValue = new Edisoft.WebService.EdiWebService.reprocessIntegrationDocsRequest();
            inValue.systemLogin = systemLogin;
            inValue.systemPassword = systemPassword;
            inValue.trackingIds = trackingIds;
            Edisoft.WebService.EdiWebService.reprocessIntegrationDocsResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).reprocessIntegrationDocs(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginreprocessIntegrationDocs(Edisoft.WebService.EdiWebService.reprocessIntegrationDocsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginreprocessIntegrationDocs(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginreprocessIntegrationDocs(string systemLogin, string systemPassword, string trackingIds, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.reprocessIntegrationDocsRequest inValue = new Edisoft.WebService.EdiWebService.reprocessIntegrationDocsRequest();
            inValue.systemLogin = systemLogin;
            inValue.systemPassword = systemPassword;
            inValue.trackingIds = trackingIds;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginreprocessIntegrationDocs(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.reprocessIntegrationDocsResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndreprocessIntegrationDocs(System.IAsyncResult result) {
            return base.Channel.EndreprocessIntegrationDocs(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndreprocessIntegrationDocs(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.reprocessIntegrationDocsResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndreprocessIntegrationDocs(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginreprocessIntegrationDocs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string systemLogin = ((string)(inValues[0]));
            string systemPassword = ((string)(inValues[1]));
            string trackingIds = ((string)(inValues[2]));
            return this.BeginreprocessIntegrationDocs(systemLogin, systemPassword, trackingIds, callback, asyncState);
        }
        
        private object[] OnEndreprocessIntegrationDocs(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndreprocessIntegrationDocs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnreprocessIntegrationDocsCompleted(object state) {
            if ((this.reprocessIntegrationDocsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.reprocessIntegrationDocsCompleted(this, new reprocessIntegrationDocsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void reprocessIntegrationDocsAsync(string systemLogin, string systemPassword, string trackingIds) {
            this.reprocessIntegrationDocsAsync(systemLogin, systemPassword, trackingIds, null);
        }
        
        public void reprocessIntegrationDocsAsync(string systemLogin, string systemPassword, string trackingIds, object userState) {
            if ((this.onBeginreprocessIntegrationDocsDelegate == null)) {
                this.onBeginreprocessIntegrationDocsDelegate = new BeginOperationDelegate(this.OnBeginreprocessIntegrationDocs);
            }
            if ((this.onEndreprocessIntegrationDocsDelegate == null)) {
                this.onEndreprocessIntegrationDocsDelegate = new EndOperationDelegate(this.OnEndreprocessIntegrationDocs);
            }
            if ((this.onreprocessIntegrationDocsCompletedDelegate == null)) {
                this.onreprocessIntegrationDocsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnreprocessIntegrationDocsCompleted);
            }
            base.InvokeAsync(this.onBeginreprocessIntegrationDocsDelegate, new object[] {
                        systemLogin,
                        systemPassword,
                        trackingIds}, this.onEndreprocessIntegrationDocsDelegate, this.onreprocessIntegrationDocsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listForIntegrationErrorsPatternResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.listForIntegrationErrorsPattern(Edisoft.WebService.EdiWebService.listForIntegrationErrorsPatternRequest request) {
            return base.Channel.listForIntegrationErrorsPattern(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes listForIntegrationErrorsPattern(string systemLogin, string systemPassword, string pattern) {
            Edisoft.WebService.EdiWebService.listForIntegrationErrorsPatternRequest inValue = new Edisoft.WebService.EdiWebService.listForIntegrationErrorsPatternRequest();
            inValue.systemLogin = systemLogin;
            inValue.systemPassword = systemPassword;
            inValue.pattern = pattern;
            Edisoft.WebService.EdiWebService.listForIntegrationErrorsPatternResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).listForIntegrationErrorsPattern(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginlistForIntegrationErrorsPattern(Edisoft.WebService.EdiWebService.listForIntegrationErrorsPatternRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginlistForIntegrationErrorsPattern(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginlistForIntegrationErrorsPattern(string systemLogin, string systemPassword, string pattern, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.listForIntegrationErrorsPatternRequest inValue = new Edisoft.WebService.EdiWebService.listForIntegrationErrorsPatternRequest();
            inValue.systemLogin = systemLogin;
            inValue.systemPassword = systemPassword;
            inValue.pattern = pattern;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginlistForIntegrationErrorsPattern(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.listForIntegrationErrorsPatternResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndlistForIntegrationErrorsPattern(System.IAsyncResult result) {
            return base.Channel.EndlistForIntegrationErrorsPattern(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndlistForIntegrationErrorsPattern(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.listForIntegrationErrorsPatternResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndlistForIntegrationErrorsPattern(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginlistForIntegrationErrorsPattern(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string systemLogin = ((string)(inValues[0]));
            string systemPassword = ((string)(inValues[1]));
            string pattern = ((string)(inValues[2]));
            return this.BeginlistForIntegrationErrorsPattern(systemLogin, systemPassword, pattern, callback, asyncState);
        }
        
        private object[] OnEndlistForIntegrationErrorsPattern(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndlistForIntegrationErrorsPattern(result);
            return new object[] {
                    retVal};
        }
        
        private void OnlistForIntegrationErrorsPatternCompleted(object state) {
            if ((this.listForIntegrationErrorsPatternCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.listForIntegrationErrorsPatternCompleted(this, new listForIntegrationErrorsPatternCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void listForIntegrationErrorsPatternAsync(string systemLogin, string systemPassword, string pattern) {
            this.listForIntegrationErrorsPatternAsync(systemLogin, systemPassword, pattern, null);
        }
        
        public void listForIntegrationErrorsPatternAsync(string systemLogin, string systemPassword, string pattern, object userState) {
            if ((this.onBeginlistForIntegrationErrorsPatternDelegate == null)) {
                this.onBeginlistForIntegrationErrorsPatternDelegate = new BeginOperationDelegate(this.OnBeginlistForIntegrationErrorsPattern);
            }
            if ((this.onEndlistForIntegrationErrorsPatternDelegate == null)) {
                this.onEndlistForIntegrationErrorsPatternDelegate = new EndOperationDelegate(this.OnEndlistForIntegrationErrorsPattern);
            }
            if ((this.onlistForIntegrationErrorsPatternCompletedDelegate == null)) {
                this.onlistForIntegrationErrorsPatternCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnlistForIntegrationErrorsPatternCompleted);
            }
            base.InvokeAsync(this.onBeginlistForIntegrationErrorsPatternDelegate, new object[] {
                        systemLogin,
                        systemPassword,
                        pattern}, this.onEndlistForIntegrationErrorsPatternDelegate, this.onlistForIntegrationErrorsPatternCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.receivePrintFormResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.receivePrintForm(Edisoft.WebService.EdiWebService.receivePrintFormRequest request) {
            return base.Channel.receivePrintForm(request);
        }
        
        public Edisoft.WebService.EdiWebService.ediFileData receivePrintForm(string name, string password, string partnerILN, string documentType, string trackingId, string filenameorig) {
            Edisoft.WebService.EdiWebService.receivePrintFormRequest inValue = new Edisoft.WebService.EdiWebService.receivePrintFormRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerILN = partnerILN;
            inValue.documentType = documentType;
            inValue.trackingId = trackingId;
            inValue.filenameorig = filenameorig;
            Edisoft.WebService.EdiWebService.receivePrintFormResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).receivePrintForm(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginreceivePrintForm(Edisoft.WebService.EdiWebService.receivePrintFormRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginreceivePrintForm(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginreceivePrintForm(string name, string password, string partnerILN, string documentType, string trackingId, string filenameorig, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.receivePrintFormRequest inValue = new Edisoft.WebService.EdiWebService.receivePrintFormRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.partnerILN = partnerILN;
            inValue.documentType = documentType;
            inValue.trackingId = trackingId;
            inValue.filenameorig = filenameorig;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginreceivePrintForm(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.receivePrintFormResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndreceivePrintForm(System.IAsyncResult result) {
            return base.Channel.EndreceivePrintForm(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.ediFileData EndreceivePrintForm(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.receivePrintFormResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndreceivePrintForm(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginreceivePrintForm(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string partnerILN = ((string)(inValues[2]));
            string documentType = ((string)(inValues[3]));
            string trackingId = ((string)(inValues[4]));
            string filenameorig = ((string)(inValues[5]));
            return this.BeginreceivePrintForm(name, password, partnerILN, documentType, trackingId, filenameorig, callback, asyncState);
        }
        
        private object[] OnEndreceivePrintForm(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.ediFileData retVal = this.EndreceivePrintForm(result);
            return new object[] {
                    retVal};
        }
        
        private void OnreceivePrintFormCompleted(object state) {
            if ((this.receivePrintFormCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.receivePrintFormCompleted(this, new receivePrintFormCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void receivePrintFormAsync(string name, string password, string partnerILN, string documentType, string trackingId, string filenameorig) {
            this.receivePrintFormAsync(name, password, partnerILN, documentType, trackingId, filenameorig, null);
        }
        
        public void receivePrintFormAsync(string name, string password, string partnerILN, string documentType, string trackingId, string filenameorig, object userState) {
            if ((this.onBeginreceivePrintFormDelegate == null)) {
                this.onBeginreceivePrintFormDelegate = new BeginOperationDelegate(this.OnBeginreceivePrintForm);
            }
            if ((this.onEndreceivePrintFormDelegate == null)) {
                this.onEndreceivePrintFormDelegate = new EndOperationDelegate(this.OnEndreceivePrintForm);
            }
            if ((this.onreceivePrintFormCompletedDelegate == null)) {
                this.onreceivePrintFormCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnreceivePrintFormCompleted);
            }
            base.InvokeAsync(this.onBeginreceivePrintFormDelegate, new object[] {
                        name,
                        password,
                        partnerILN,
                        documentType,
                        trackingId,
                        filenameorig}, this.onEndreceivePrintFormDelegate, this.onreceivePrintFormCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.organizationInfoResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.organizationInfo(Edisoft.WebService.EdiWebService.organizationInfoRequest request) {
            return base.Channel.organizationInfo(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes organizationInfo(string name, string password, string inn, string kpp, string ogrn, string fnsId, string gln) {
            Edisoft.WebService.EdiWebService.organizationInfoRequest inValue = new Edisoft.WebService.EdiWebService.organizationInfoRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.inn = inn;
            inValue.kpp = kpp;
            inValue.ogrn = ogrn;
            inValue.fnsId = fnsId;
            inValue.gln = gln;
            Edisoft.WebService.EdiWebService.organizationInfoResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).organizationInfo(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginorganizationInfo(Edisoft.WebService.EdiWebService.organizationInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginorganizationInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginorganizationInfo(string name, string password, string inn, string kpp, string ogrn, string fnsId, string gln, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.organizationInfoRequest inValue = new Edisoft.WebService.EdiWebService.organizationInfoRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.inn = inn;
            inValue.kpp = kpp;
            inValue.ogrn = ogrn;
            inValue.fnsId = fnsId;
            inValue.gln = gln;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginorganizationInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.organizationInfoResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndorganizationInfo(System.IAsyncResult result) {
            return base.Channel.EndorganizationInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes EndorganizationInfo(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.organizationInfoResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndorganizationInfo(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginorganizationInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string inn = ((string)(inValues[2]));
            string kpp = ((string)(inValues[3]));
            string ogrn = ((string)(inValues[4]));
            string fnsId = ((string)(inValues[5]));
            string gln = ((string)(inValues[6]));
            return this.BeginorganizationInfo(name, password, inn, kpp, ogrn, fnsId, gln, callback, asyncState);
        }
        
        private object[] OnEndorganizationInfo(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.EndorganizationInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnorganizationInfoCompleted(object state) {
            if ((this.organizationInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.organizationInfoCompleted(this, new organizationInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void organizationInfoAsync(string name, string password, string inn, string kpp, string ogrn, string fnsId, string gln) {
            this.organizationInfoAsync(name, password, inn, kpp, ogrn, fnsId, gln, null);
        }
        
        public void organizationInfoAsync(string name, string password, string inn, string kpp, string ogrn, string fnsId, string gln, object userState) {
            if ((this.onBeginorganizationInfoDelegate == null)) {
                this.onBeginorganizationInfoDelegate = new BeginOperationDelegate(this.OnBeginorganizationInfo);
            }
            if ((this.onEndorganizationInfoDelegate == null)) {
                this.onEndorganizationInfoDelegate = new EndOperationDelegate(this.OnEndorganizationInfo);
            }
            if ((this.onorganizationInfoCompletedDelegate == null)) {
                this.onorganizationInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnorganizationInfoCompleted);
            }
            base.InvokeAsync(this.onBeginorganizationInfoDelegate, new object[] {
                        name,
                        password,
                        inn,
                        kpp,
                        ogrn,
                        fnsId,
                        gln}, this.onEndorganizationInfoDelegate, this.onorganizationInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.organizationInfoXMLResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.organizationInfoXML(Edisoft.WebService.EdiWebService.organizationInfoXMLRequest request) {
            return base.Channel.organizationInfoXML(request);
        }
        
        public Edisoft.WebService.EdiWebService.organizationInfoModel organizationInfoXML(string name, string password, string inn, string kpp, string ogrn, string fnsId, string gln) {
            Edisoft.WebService.EdiWebService.organizationInfoXMLRequest inValue = new Edisoft.WebService.EdiWebService.organizationInfoXMLRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.inn = inn;
            inValue.kpp = kpp;
            inValue.ogrn = ogrn;
            inValue.fnsId = fnsId;
            inValue.gln = gln;
            Edisoft.WebService.EdiWebService.organizationInfoXMLResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).organizationInfoXML(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginorganizationInfoXML(Edisoft.WebService.EdiWebService.organizationInfoXMLRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginorganizationInfoXML(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginorganizationInfoXML(string name, string password, string inn, string kpp, string ogrn, string fnsId, string gln, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.organizationInfoXMLRequest inValue = new Edisoft.WebService.EdiWebService.organizationInfoXMLRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.inn = inn;
            inValue.kpp = kpp;
            inValue.ogrn = ogrn;
            inValue.fnsId = fnsId;
            inValue.gln = gln;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginorganizationInfoXML(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.organizationInfoXMLResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndorganizationInfoXML(System.IAsyncResult result) {
            return base.Channel.EndorganizationInfoXML(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.organizationInfoModel EndorganizationInfoXML(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.organizationInfoXMLResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndorganizationInfoXML(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginorganizationInfoXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string inn = ((string)(inValues[2]));
            string kpp = ((string)(inValues[3]));
            string ogrn = ((string)(inValues[4]));
            string fnsId = ((string)(inValues[5]));
            string gln = ((string)(inValues[6]));
            return this.BeginorganizationInfoXML(name, password, inn, kpp, ogrn, fnsId, gln, callback, asyncState);
        }
        
        private object[] OnEndorganizationInfoXML(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.organizationInfoModel retVal = this.EndorganizationInfoXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnorganizationInfoXMLCompleted(object state) {
            if ((this.organizationInfoXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.organizationInfoXMLCompleted(this, new organizationInfoXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void organizationInfoXMLAsync(string name, string password, string inn, string kpp, string ogrn, string fnsId, string gln) {
            this.organizationInfoXMLAsync(name, password, inn, kpp, ogrn, fnsId, gln, null);
        }
        
        public void organizationInfoXMLAsync(string name, string password, string inn, string kpp, string ogrn, string fnsId, string gln, object userState) {
            if ((this.onBeginorganizationInfoXMLDelegate == null)) {
                this.onBeginorganizationInfoXMLDelegate = new BeginOperationDelegate(this.OnBeginorganizationInfoXML);
            }
            if ((this.onEndorganizationInfoXMLDelegate == null)) {
                this.onEndorganizationInfoXMLDelegate = new EndOperationDelegate(this.OnEndorganizationInfoXML);
            }
            if ((this.onorganizationInfoXMLCompletedDelegate == null)) {
                this.onorganizationInfoXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnorganizationInfoXMLCompleted);
            }
            base.InvokeAsync(this.onBeginorganizationInfoXMLDelegate, new object[] {
                        name,
                        password,
                        inn,
                        kpp,
                        ogrn,
                        fnsId,
                        gln}, this.onEndorganizationInfoXMLDelegate, this.onorganizationInfoXMLCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.receiveFnsArchiveResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.receiveFnsArchive(Edisoft.WebService.EdiWebService.receiveFnsArchiveRequest request) {
            return base.Channel.receiveFnsArchive(request);
        }
        
        public Edisoft.WebService.EdiWebService.ediFileData receiveFnsArchive(string name, string password, long trackingId, string fileId, bool includePdf) {
            Edisoft.WebService.EdiWebService.receiveFnsArchiveRequest inValue = new Edisoft.WebService.EdiWebService.receiveFnsArchiveRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.trackingId = trackingId;
            inValue.fileId = fileId;
            inValue.includePdf = includePdf;
            Edisoft.WebService.EdiWebService.receiveFnsArchiveResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).receiveFnsArchive(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.BeginreceiveFnsArchive(Edisoft.WebService.EdiWebService.receiveFnsArchiveRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginreceiveFnsArchive(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginreceiveFnsArchive(string name, string password, long trackingId, string fileId, bool includePdf, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.receiveFnsArchiveRequest inValue = new Edisoft.WebService.EdiWebService.receiveFnsArchiveRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.trackingId = trackingId;
            inValue.fileId = fileId;
            inValue.includePdf = includePdf;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).BeginreceiveFnsArchive(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.receiveFnsArchiveResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.EndreceiveFnsArchive(System.IAsyncResult result) {
            return base.Channel.EndreceiveFnsArchive(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.ediFileData EndreceiveFnsArchive(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.receiveFnsArchiveResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).EndreceiveFnsArchive(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginreceiveFnsArchive(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            long trackingId = ((long)(inValues[2]));
            string fileId = ((string)(inValues[3]));
            bool includePdf = ((bool)(inValues[4]));
            return this.BeginreceiveFnsArchive(name, password, trackingId, fileId, includePdf, callback, asyncState);
        }
        
        private object[] OnEndreceiveFnsArchive(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.ediFileData retVal = this.EndreceiveFnsArchive(result);
            return new object[] {
                    retVal};
        }
        
        private void OnreceiveFnsArchiveCompleted(object state) {
            if ((this.receiveFnsArchiveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.receiveFnsArchiveCompleted(this, new receiveFnsArchiveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void receiveFnsArchiveAsync(string name, string password, long trackingId, string fileId, bool includePdf) {
            this.receiveFnsArchiveAsync(name, password, trackingId, fileId, includePdf, null);
        }
        
        public void receiveFnsArchiveAsync(string name, string password, long trackingId, string fileId, bool includePdf, object userState) {
            if ((this.onBeginreceiveFnsArchiveDelegate == null)) {
                this.onBeginreceiveFnsArchiveDelegate = new BeginOperationDelegate(this.OnBeginreceiveFnsArchive);
            }
            if ((this.onEndreceiveFnsArchiveDelegate == null)) {
                this.onEndreceiveFnsArchiveDelegate = new EndOperationDelegate(this.OnEndreceiveFnsArchive);
            }
            if ((this.onreceiveFnsArchiveCompletedDelegate == null)) {
                this.onreceiveFnsArchiveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnreceiveFnsArchiveCompleted);
            }
            base.InvokeAsync(this.onBeginreceiveFnsArchiveDelegate, new object[] {
                        name,
                        password,
                        trackingId,
                        fileId,
                        includePdf}, this.onEndreceiveFnsArchiveDelegate, this.onreceiveFnsArchiveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.relationshipsResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.relationships(Edisoft.WebService.EdiWebService.relationshipsRequest request) {
            return base.Channel.relationships(request);
        }
        
        public Edisoft.WebService.EdiWebService.retRes relationships(string name, string password, int timeout) {
            Edisoft.WebService.EdiWebService.relationshipsRequest inValue = new Edisoft.WebService.EdiWebService.relationshipsRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.timeout = timeout;
            Edisoft.WebService.EdiWebService.relationshipsResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).relationships(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Edisoft.WebService.EdiWebService.EDIWebServicePortType.Beginrelationships(Edisoft.WebService.EdiWebService.relationshipsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginrelationships(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult Beginrelationships(string name, string password, int timeout, System.AsyncCallback callback, object asyncState) {
            Edisoft.WebService.EdiWebService.relationshipsRequest inValue = new Edisoft.WebService.EdiWebService.relationshipsRequest();
            inValue.name = name;
            inValue.password = password;
            inValue.timeout = timeout;
            return ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).Beginrelationships(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Edisoft.WebService.EdiWebService.relationshipsResponse Edisoft.WebService.EdiWebService.EDIWebServicePortType.Endrelationships(System.IAsyncResult result) {
            return base.Channel.Endrelationships(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Edisoft.WebService.EdiWebService.retRes Endrelationships(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.relationshipsResponse retVal = ((Edisoft.WebService.EdiWebService.EDIWebServicePortType)(this)).Endrelationships(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginrelationships(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            int timeout = ((int)(inValues[2]));
            return this.Beginrelationships(name, password, timeout, callback, asyncState);
        }
        
        private object[] OnEndrelationships(System.IAsyncResult result) {
            Edisoft.WebService.EdiWebService.retRes retVal = this.Endrelationships(result);
            return new object[] {
                    retVal};
        }
        
        private void OnrelationshipsCompleted(object state) {
            if ((this.relationshipsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.relationshipsCompleted(this, new relationshipsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void relationshipsAsync(string name, string password, int timeout) {
            this.relationshipsAsync(name, password, timeout, null);
        }
        
        public void relationshipsAsync(string name, string password, int timeout, object userState) {
            if ((this.onBeginrelationshipsDelegate == null)) {
                this.onBeginrelationshipsDelegate = new BeginOperationDelegate(this.OnBeginrelationships);
            }
            if ((this.onEndrelationshipsDelegate == null)) {
                this.onEndrelationshipsDelegate = new EndOperationDelegate(this.OnEndrelationships);
            }
            if ((this.onrelationshipsCompletedDelegate == null)) {
                this.onrelationshipsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnrelationshipsCompleted);
            }
            base.InvokeAsync(this.onBeginrelationshipsDelegate, new object[] {
                        name,
                        password,
                        timeout}, this.onEndrelationshipsDelegate, this.onrelationshipsCompletedDelegate, userState);
        }
    }
}
